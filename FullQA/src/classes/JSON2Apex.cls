/**
 * @File Name          : JSON2Apex.cls
 * @Description        : 
 * @Author             : ChangeMeIn@UserSettingsUnder.SFDoc
 * @Group              : 
 * @Last Modified By   : ChangeMeIn@UserSettingsUnder.SFDoc
 * @Last Modified On   : 7/26/2019, 2:00:20 PM
 * @Modification Log   : 
 *==============================================================================
 * Ver         Date                     Author      		      Modification
 *==============================================================================
 * 1.0    7/24/2019, 12:48:45 PM   ChangeMeIn@UserSettingsUnder.SFDoc     Initial Version
**/
//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class JSON2Apex {

	public class ReadOnly {
		public Line line {get;set;}

		public ReadOnly(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'line') {
							line = new Line(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ReadOnly consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public Quote quote {get;set;}
	public Product product {get;set;}
	public List<ConfigurationData> products {get;set;}
	public ReadOnly readOnly {get;set;}
	public Redirect redirect {get;set;}

	public JSON2Apex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'quote') {
						quote = new Quote(parser);
					} else if (text == 'product') {
						product = new Product(parser);
					} else if (text == 'products') {
						products = arrayOfConfigurationData(parser);
					} else if (text == 'readOnly') {
						readOnly = new ReadOnly(parser);
					} else if (text == 'redirect') {
						redirect = new Redirect(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}

	public class Line_Z {
		public Attributes attributes {get;set;}
		public String Id {get;set;}
		public String CurrencyIsoCode {get;set;}
		public String SBQQ_Quote_c {get;set;}
		public String SBQQ_Description_c {get;set;}
		public String SBQQ_Product_c {get;set;}
		public Integer SBQQ_Number_c {get;set;}
		public String SBQQ_PricebookEntryId_c {get;set;}
		public Boolean SBQQ_HasConsumptionSchedule_c {get;set;}
		public Boolean SBQQ_Hidden_c {get;set;}
		public Boolean SBQQ_Taxable_c {get;set;}
		public String SBQQ_SubscriptionPricing_c {get;set;}
		public Integer SBQQ_DefaultSubscriptionTerm_c {get;set;}
		public String SBQQ_SubscriptionScope_c {get;set;}
		public String SBQQ_ProductSubscriptionType_c {get;set;}
		public String SBQQ_SubscriptionType_c {get;set;}
		public String Name {get;set;}
		public Integer SBQQ_AdditionalDiscount_c {get;set;}
		public Boolean SBQQ_Bundled_c {get;set;}
		public Boolean SBQQ_ComponentDiscountedByPackage_c {get;set;}
		public Boolean SBQQ_CostEditable_c {get;set;}
		public Integer SBQQ_CustomerPrice_c {get;set;}
		public Integer SBQQ_ListPrice_c {get;set;}
		public Integer SBQQ_OriginalPrice_c {get;set;}
		public Integer SBQQ_NetPrice_c {get;set;}
		public Integer SBQQ_NetTotal_c {get;set;}
		public Boolean SBQQ_NonDiscountable_c {get;set;}
		public Boolean SBQQ_NonPartnerDiscountable_c {get;set;}
		public Boolean SBQQ_Optional_c {get;set;}
		public Boolean SBQQ_Bundle_c {get;set;}
		public Integer SBQQ_PartnerPrice_c {get;set;}
		public Boolean SBQQ_PriceEditable_c {get;set;}
		public Integer SBQQ_ProratedListPrice_c {get;set;}
		public String SBQQ_PricingMethod_c {get;set;}
		public Boolean SBQQ_PricingMethodEditable_c {get;set;}
		public Integer SBQQ_ProrateMultiplier_c {get;set;}
		public Integer SBQQ_Quantity_c {get;set;}
		public String SBQQ_RenewedSubscription_c {get;set;}
		public Integer SBQQ_SpecialPrice_c {get;set;}
		public Integer SBQQ_ComponentTotal_c {get;set;}
		public Integer SBQQ_ComponentCost_c {get;set;}
		public Integer SBQQ_ComponentListTotal_c {get;set;}
		public Boolean SBQQ_Renewal_c {get;set;}
		public Integer SBQQ_ProratedPrice_c {get;set;}
		public Integer SBQQ_Uplift_c {get;set;}
		public Integer SBQQ_UpliftAmount_c {get;set;}
		public Boolean SBQQ_ComponentUpliftedByPackage_c {get;set;}
		public String SBQQ_ProductName_c {get;set;}
		public Boolean SBQQ_Existing_c {get;set;}
		public Boolean SBQQ_CarryoverLine_c {get;set;}
		public Boolean SBQQ_AllowAssetRefund_c {get;set;}
		public Integer SBQQ_RegularPrice_c {get;set;}
		public Boolean Inherit_List_Price_from_Package_c {get;set;}
		public Boolean Initialized_c {get;set;}
		public String Product_Family_and_Line_c {get;set;}
		public Integer Component_Quantity_Total_c {get;set;}
		public Integer List_Price_c {get;set;}
		public Integer SBQQ_EffectiveQuantity_c {get;set;}
		public String Product_Line_c {get;set;}
		public Boolean Use_Tier_Upper_Bound_c {get;set;}
		public String Product_or_Service_c {get;set;}
		public Integer OSCPQ_Net_ARR_c {get;set;}
		public Integer OSCPQ_Net_MRR_c {get;set;}
		public String OSCPQ_External_Id_c {get;set;}
		public Boolean Primary_Product_c {get;set;}
		public Boolean Virtual_Bundle_c {get;set;}
		public Integer SBQQ_RegularTotal_c {get;set;}
		public String SBQQ_ProductCode_c {get;set;}
		public Boolean Exclude_From_Component_Sum_c {get;set;}
		public Integer Previous_Customer_Price_c {get;set;}
		public String SBQQ_ProductFamily_c {get;set;}
		public Integer SBQQ_Markup_c {get;set;}
		public String SBQQ_Product_r {get;set;}
		public String SBQQ_RenewedSubscription_r {get;set;}
		public String SBQQ_RequiredBy_r {get;set;}
		public String SBQQ_Group_r {get;set;}
		public String SBQQ_Quote_r {get;set;}
		public String SBQQ_ProductOption_r {get;set;}
		public String SBQQ_TermDiscountSchedule_r {get;set;}
		public String SBQQ_DiscountSchedule_r {get;set;}
		public String SBQQ_ContractedPrice_r {get;set;}

		public Line_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'attributes') {
							attributes = new Attributes(parser);
						} else if (text == 'Id') {
							Id = parser.getText();
						} else if (text == 'CurrencyIsoCode') {
							CurrencyIsoCode = parser.getText();
						} else if (text == 'SBQQ_Quote_c') {
							SBQQ_Quote_c = parser.getText();
						} else if (text == 'SBQQ_Description_c') {
							SBQQ_Description_c = parser.getText();
						} else if (text == 'SBQQ_Product_c') {
							SBQQ_Product_c = parser.getText();
						} else if (text == 'SBQQ_Number_c') {
							SBQQ_Number_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PricebookEntryId_c') {
							SBQQ_PricebookEntryId_c = parser.getText();
						} else if (text == 'SBQQ_HasConsumptionSchedule_c') {
							SBQQ_HasConsumptionSchedule_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Hidden_c') {
							SBQQ_Hidden_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Taxable_c') {
							SBQQ_Taxable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_SubscriptionPricing_c') {
							SBQQ_SubscriptionPricing_c = parser.getText();
						} else if (text == 'SBQQ_DefaultSubscriptionTerm_c') {
							SBQQ_DefaultSubscriptionTerm_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_SubscriptionScope_c') {
							SBQQ_SubscriptionScope_c = parser.getText();
						} else if (text == 'SBQQ_ProductSubscriptionType_c') {
							SBQQ_ProductSubscriptionType_c = parser.getText();
						} else if (text == 'SBQQ_SubscriptionType_c') {
							SBQQ_SubscriptionType_c = parser.getText();
						} else if (text == 'Name') {
							Name = parser.getText();
						} else if (text == 'SBQQ_AdditionalDiscount_c') {
							SBQQ_AdditionalDiscount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Bundled_c') {
							SBQQ_Bundled_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ComponentDiscountedByPackage_c') {
							SBQQ_ComponentDiscountedByPackage_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_CostEditable_c') {
							SBQQ_CostEditable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_CustomerPrice_c') {
							SBQQ_CustomerPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ListPrice_c') {
							SBQQ_ListPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_OriginalPrice_c') {
							SBQQ_OriginalPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_NetPrice_c') {
							SBQQ_NetPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_NetTotal_c') {
							SBQQ_NetTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_NonDiscountable_c') {
							SBQQ_NonDiscountable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_NonPartnerDiscountable_c') {
							SBQQ_NonPartnerDiscountable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Optional_c') {
							SBQQ_Optional_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Bundle_c') {
							SBQQ_Bundle_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_PartnerPrice_c') {
							SBQQ_PartnerPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PriceEditable_c') {
							SBQQ_PriceEditable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProratedListPrice_c') {
							SBQQ_ProratedListPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PricingMethod_c') {
							SBQQ_PricingMethod_c = parser.getText();
						} else if (text == 'SBQQ_PricingMethodEditable_c') {
							SBQQ_PricingMethodEditable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProrateMultiplier_c') {
							SBQQ_ProrateMultiplier_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Quantity_c') {
							SBQQ_Quantity_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_RenewedSubscription_c') {
							SBQQ_RenewedSubscription_c = parser.getText();
						} else if (text == 'SBQQ_SpecialPrice_c') {
							SBQQ_SpecialPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentTotal_c') {
							SBQQ_ComponentTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentCost_c') {
							SBQQ_ComponentCost_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentListTotal_c') {
							SBQQ_ComponentListTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Renewal_c') {
							SBQQ_Renewal_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProratedPrice_c') {
							SBQQ_ProratedPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Uplift_c') {
							SBQQ_Uplift_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_UpliftAmount_c') {
							SBQQ_UpliftAmount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentUpliftedByPackage_c') {
							SBQQ_ComponentUpliftedByPackage_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProductName_c') {
							SBQQ_ProductName_c = parser.getText();
						} else if (text == 'SBQQ_Existing_c') {
							SBQQ_Existing_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_CarryoverLine_c') {
							SBQQ_CarryoverLine_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_AllowAssetRefund_c') {
							SBQQ_AllowAssetRefund_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_RegularPrice_c') {
							SBQQ_RegularPrice_c = parser.getIntegerValue();
						} else if (text == 'Inherit_List_Price_from_Package_c') {
							Inherit_List_Price_from_Package_c = parser.getBooleanValue();
						} else if (text == 'Initialized_c') {
							Initialized_c = parser.getBooleanValue();
						} else if (text == 'Product_Family_and_Line_c') {
							Product_Family_and_Line_c = parser.getText();
						} else if (text == 'Component_Quantity_Total_c') {
							Component_Quantity_Total_c = parser.getIntegerValue();
						} else if (text == 'List_Price_c') {
							List_Price_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_EffectiveQuantity_c') {
							SBQQ_EffectiveQuantity_c = parser.getIntegerValue();
						} else if (text == 'Product_Line_c') {
							Product_Line_c = parser.getText();
						} else if (text == 'Use_Tier_Upper_Bound_c') {
							Use_Tier_Upper_Bound_c = parser.getBooleanValue();
						} else if (text == 'Product_or_Service_c') {
							Product_or_Service_c = parser.getText();
						} else if (text == 'OSCPQ_Net_ARR_c') {
							OSCPQ_Net_ARR_c = parser.getIntegerValue();
						} else if (text == 'OSCPQ_Net_MRR_c') {
							OSCPQ_Net_MRR_c = parser.getIntegerValue();
						} else if (text == 'OSCPQ_External_Id_c') {
							OSCPQ_External_Id_c = parser.getText();
						} else if (text == 'Primary_Product_c') {
							Primary_Product_c = parser.getBooleanValue();
						} else if (text == 'Virtual_Bundle_c') {
							Virtual_Bundle_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_RegularTotal_c') {
							SBQQ_RegularTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ProductCode_c') {
							SBQQ_ProductCode_c = parser.getText();
						} else if (text == 'Exclude_From_Component_Sum_c') {
							Exclude_From_Component_Sum_c = parser.getBooleanValue();
						} else if (text == 'Previous_Customer_Price_c') {
							Previous_Customer_Price_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ProductFamily_c') {
							SBQQ_ProductFamily_c = parser.getText();
						} else if (text == 'SBQQ_Markup_c') {
							SBQQ_Markup_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Product_r') {
							SBQQ_Product_r = parser.getText();
						} else if (text == 'SBQQ_RenewedSubscription_r') {
							SBQQ_RenewedSubscription_r = parser.getText();
						} else if (text == 'SBQQ_RequiredBy_r') {
							SBQQ_RequiredBy_r = parser.getText();
						} else if (text == 'SBQQ_Group_r') {
							SBQQ_Group_r = parser.getText();
						} else if (text == 'SBQQ_Quote_r') {
							SBQQ_Quote_r = parser.getText();
						} else if (text == 'SBQQ_ProductOption_r') {
							SBQQ_ProductOption_r = parser.getText();
						} else if (text == 'SBQQ_TermDiscountSchedule_r') {
							SBQQ_TermDiscountSchedule_r = parser.getText();
						} else if (text == 'SBQQ_DiscountSchedule_r') {
							SBQQ_DiscountSchedule_r = parser.getText();
						} else if (text == 'SBQQ_ContractedPrice_r') {
							SBQQ_ContractedPrice_r = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Line_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class Attributes_Z {
		public String type_Z {get;set;} // in json: type

		public Attributes_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'type') {
							type_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Attributes_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class Attributes {
		public String type_Z {get;set;} // in json: type
		public String url {get;set;}

		public Attributes(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'type') {
							type_Z = parser.getText();
						} else if (text == 'url') {
							url = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Attributes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class SBQQ_Opportunity2_r {
		public Attributes attributes {get;set;}
		public String Id {get;set;}
		public String SBQQ_PrimaryQuote_c {get;set;}
		public String Pricebook2Id {get;set;}
		public String AccountId {get;set;}
		public String RecordTypeId {get;set;}
		public String CurrencyIsoCode {get;set;}

		public SBQQ_Opportunity2_r(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'attributes') {
							attributes = new Attributes(parser);
						} else if (text == 'Id') {
							Id = parser.getText();
						} else if (text == 'SBQQ_PrimaryQuote_c') {
							SBQQ_PrimaryQuote_c = parser.getText();
						} else if (text == 'Pricebook2Id') {
							Pricebook2Id = parser.getText();
						} else if (text == 'AccountId') {
							AccountId = parser.getText();
						} else if (text == 'RecordTypeId') {
							RecordTypeId = parser.getText();
						} else if (text == 'CurrencyIsoCode') {
							CurrencyIsoCode = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'SBQQ_Opportunity2_r consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class OptionConfigurations {
		public List<Options> Feature_1 {get;set;}
	public List<Options> Feature_2 {get;set;}
public List<Options> Feature_3 {get;set;}
public List<Options> Feature_4 {get;set;}
public List<Options> Feature_5 {get;set;}

public OptionConfigurations(JSONParser parser) {
while (parser.nextToken() != System.JSONToken.END_OBJECT) {
if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
String text = parser.getText();
if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
if (text == 'Feature_1') {
Feature_1 = arrayOfOptions(parser);
} else if (text == 'Feature_2') {
Feature_2 = arrayOfOptions(parser);
} else if (text == 'Feature_3') {
Feature_3 = arrayOfOptions(parser);
} else if (text == 'Feature_4') {
Feature_4 = arrayOfOptions(parser);
} else if (text == 'Feature_5') {
Feature_5 = arrayOfOptions(parser);
} else {
System.debug(LoggingLevel.WARN, 'OptionConfigurations consuming unrecognized property: '+text);
consumeObject(parser);
}
}
}
}
}
}


	public class Product {
		public String configuredProductId {get;set;}
		public String lineItemId {get;set;}
		public Integer lineKey {get;set;}
		public ConfigurationAttributes configurationAttributes {get;set;}
		public OptionConfigurations optionConfigurations {get;set;}
		public ConfigurationData configurationData {get;set;}

		public Product(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'configuredProductId') {
							configuredProductId = parser.getText();
						} else if (text == 'lineItemId') {
							lineItemId = parser.getText();
						} else if (text == 'lineKey') {
							lineKey = parser.getIntegerValue();
						} else if (text == 'configurationAttributes') {
							configurationAttributes = new ConfigurationAttributes(parser);
						} else if (text == 'optionConfigurations') {
							optionConfigurations = new OptionConfigurations(parser);
						} else if (text == 'configurationData') {
							configurationData = new ConfigurationData(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Product consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class ReadOnly_Z {
		public Line_Z line {get;set;}

		public ReadOnly_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'line') {
							line = new Line_Z(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ReadOnly_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class Redirect {
		public Boolean auto {get;set;}
		public Boolean save {get;set;}

		public Redirect(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'auto') {
							auto = parser.getBooleanValue();
						} else if (text == 'save') {
							save = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Redirect consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class SBQQ_Account_r {
		public Attributes attributes {get;set;}
		public String Name {get;set;}
		public String SBQQ_RenewalPricingMethod_c {get;set;}
		public String Id {get;set;}
		public String RecordTypeId {get;set;}
		public String CurrencyIsoCode {get;set;}

		public SBQQ_Account_r(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'attributes') {
							attributes = new Attributes(parser);
						} else if (text == 'Name') {
							Name = parser.getText();
						} else if (text == 'SBQQ_RenewalPricingMethod_c') {
							SBQQ_RenewalPricingMethod_c = parser.getText();
						} else if (text == 'Id') {
							Id = parser.getText();
						} else if (text == 'RecordTypeId') {
							RecordTypeId = parser.getText();
						} else if (text == 'CurrencyIsoCode') {
							CurrencyIsoCode = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'SBQQ_Account_r consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class SBQQ_RenewedSubscription_r {
		public String Id {get;set;}

		public SBQQ_RenewedSubscription_r(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'Id') {
							Id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'SBQQ_RenewedSubscription_r consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}


	public class ConfigurationAttributes {
		public Object Billing_Frequency_c {get;set;}
		public Attributes_Z attributes {get;set;}
		public String OSCPQ_External_Id_c {get;set;}
		public Boolean Primary_Product_c {get;set;}
		public Boolean Exclude_From_Component_Sum_c {get;set;}
		public String Product_Line_c {get;set;}
		public Boolean Inherit_List_Price_from_Package_c {get;set;}

		public ConfigurationAttributes(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'Billing_Frequency_c') {
							Billing_Frequency_c = parser.getText();
						} else if (text == 'attributes') {
							attributes = new Attributes_Z(parser);
						} else if (text == 'OSCPQ_External_Id_c') {
							OSCPQ_External_Id_c = parser.getText();
						} else if (text == 'Primary_Product_c') {
							Primary_Product_c = parser.getBooleanValue();
						} else if (text == 'Exclude_From_Component_Sum_c') {
							Exclude_From_Component_Sum_c = parser.getBooleanValue();
						} else if (text == 'Product_Line_c') {
							Product_Line_c = parser.getText();
						} else if (text == 'Inherit_List_Price_from_Package_c') {
							Inherit_List_Price_from_Package_c = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'ConfigurationAttributes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class Quote {
		public Attributes attributes {get;set;}
		public String Id {get;set;}
		public String CurrencyIsoCode {get;set;}
		public String Name {get;set;}
		public String SBQQ_Type_c {get;set;}
		public String SBQQ_Account_c {get;set;}
		public String SBQQ_ExpirationDate_c {get;set;}
		public String SBQQ_StartDate_c {get;set;}
		public String SBQQ_EndDate_c {get;set;}
		public Integer SBQQ_NetAmount_c {get;set;}
		public Integer SBQQ_CustomerAmount_c {get;set;}
		public String SBQQ_PricebookId_c {get;set;}
		public String SBQQ_ContractingMethod_c {get;set;}
		public Boolean SBQQ_Unopened_c {get;set;}
		public Integer SBQQ_LineItemCount_c {get;set;}
		public String SBQQ_PaymentTerms_c {get;set;}
		public Boolean SBQQ_WatermarkShown_c {get;set;}
		public Integer Uplift_Percent_c {get;set;}
		public String SBQQ_Status_c {get;set;}
		public Boolean SBQQ_Primary_c {get;set;}
		public Boolean SBQQ_LineItemsGrouped_c {get;set;}
		public String SBQQ_Opportunity2_c {get;set;}
		public String RecordTypeId {get;set;}
		public String SBQQ_Account_r {get;set;}
		public String SBQQ_Opportunity2_r {get;set;}

		public Quote(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'attributes') {
							attributes = new Attributes(parser);
						} else if (text == 'Id') {
							Id = parser.getText();
						} else if (text == 'CurrencyIsoCode') {
							CurrencyIsoCode = parser.getText();
						} else if (text == 'Name') {
							Name = parser.getText();
						} else if (text == 'SBQQ_Type_c') {
							SBQQ_Type_c = parser.getText();
						} else if (text == 'SBQQ_Account_c') {
							SBQQ_Account_c = parser.getText();
						} else if (text == 'SBQQ_ExpirationDate_c') {
							SBQQ_ExpirationDate_c = parser.getText();
						} else if (text == 'SBQQ_StartDate_c') {
							SBQQ_StartDate_c = parser.getText();
						} else if (text == 'SBQQ_EndDate_c') {
							SBQQ_EndDate_c = parser.getText();
						} else if (text == 'SBQQ_NetAmount_c') {
							SBQQ_NetAmount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_CustomerAmount_c') {
							SBQQ_CustomerAmount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PricebookId_c') {
							SBQQ_PricebookId_c = parser.getText();
						} else if (text == 'SBQQ_ContractingMethod_c') {
							SBQQ_ContractingMethod_c = parser.getText();
						} else if (text == 'SBQQ_Unopened_c') {
							SBQQ_Unopened_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_LineItemCount_c') {
							SBQQ_LineItemCount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PaymentTerms_c') {
							SBQQ_PaymentTerms_c = parser.getText();
						} else if (text == 'SBQQ_WatermarkShown_c') {
							SBQQ_WatermarkShown_c = parser.getBooleanValue();
						} else if (text == 'Uplift_Percent_c') {
							Uplift_Percent_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Status_c') {
							SBQQ_Status_c = parser.getText();
						} else if (text == 'SBQQ_Primary_c') {
							SBQQ_Primary_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_LineItemsGrouped_c') {
							SBQQ_LineItemsGrouped_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Opportunity2_c') {
							SBQQ_Opportunity2_c = parser.getText();
						} else if (text == 'RecordTypeId') {
							RecordTypeId = parser.getText();
						} else if (text == 'SBQQ_Account_r') {
							SBQQ_Account_r = parser.getText();
						} else if (text == 'SBQQ_Opportunity2_r') {
							SBQQ_Opportunity2_r = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Quote consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class Line {
		public Attributes attributes {get;set;}
		public String Id {get;set;}
		public String CurrencyIsoCode {get;set;}
		public String SBQQ_Quote_c {get;set;}
		public String SBQQ_RequiredBy_c {get;set;}
		public String SBQQ_Description_c {get;set;}
		public String SBQQ_Product_c {get;set;}
		public String SBQQ_ProductOption_c {get;set;}
		public Integer SBQQ_Number_c {get;set;}
		public String SBQQ_DynamicOptionId_c {get;set;}
		public String SBQQ_PricebookEntryId_c {get;set;}
		public Boolean SBQQ_HasConsumptionSchedule_c {get;set;}
		public Boolean SBQQ_Hidden_c {get;set;}
		public Boolean SBQQ_Taxable_c {get;set;}
		public String SBQQ_SubscriptionPricing_c {get;set;}
		public Integer SBQQ_DefaultSubscriptionTerm_c {get;set;}
		public String SBQQ_SubscriptionScope_c {get;set;}
		public String SBQQ_ProductSubscriptionType_c {get;set;}
		public String SBQQ_SubscriptionType_c {get;set;}
		public String SBQQ_ChargeType_c {get;set;}
		public String SBQQ_BillingType_c {get;set;}
		public String Name {get;set;}
		public Integer SBQQ_AdditionalDiscount_c {get;set;}
		public Boolean SBQQ_Bundled_c {get;set;}
		public Boolean SBQQ_ComponentDiscountedByPackage_c {get;set;}
		public Boolean SBQQ_CostEditable_c {get;set;}
		public Integer SBQQ_CustomerPrice_c {get;set;}
		public Integer SBQQ_ListPrice_c {get;set;}
		public Integer SBQQ_OriginalPrice_c {get;set;}
		public Integer SBQQ_NetPrice_c {get;set;}
		public Integer SBQQ_NetTotal_c {get;set;}
		public Boolean SBQQ_NonDiscountable_c {get;set;}
		public Boolean SBQQ_NonPartnerDiscountable_c {get;set;}
		public Boolean SBQQ_Optional_c {get;set;}
		public String SBQQ_OptionType_c {get;set;}
		public Integer SBQQ_BundledQuantity_c {get;set;}
		public Boolean SBQQ_Bundle_c {get;set;}
		public Integer SBQQ_PartnerPrice_c {get;set;}
		public Boolean SBQQ_PriceEditable_c {get;set;}
		public Integer SBQQ_ProratedListPrice_c {get;set;}
		public String SBQQ_PricingMethod_c {get;set;}
		public Boolean SBQQ_PricingMethodEditable_c {get;set;}
		public Integer SBQQ_ProrateMultiplier_c {get;set;}
		public Integer SBQQ_Quantity_c {get;set;}
		public String SBQQ_RenewedSubscription_c {get;set;}
		public Integer SBQQ_SpecialPrice_c {get;set;}
		public Integer SBQQ_ComponentTotal_c {get;set;}
		public Integer SBQQ_ComponentCost_c {get;set;}
		public Integer SBQQ_ComponentListTotal_c {get;set;}
		public Boolean SBQQ_Renewal_c {get;set;}
		public Integer SBQQ_ProratedPrice_c {get;set;}
		public Integer SBQQ_Uplift_c {get;set;}
		public Integer SBQQ_UpliftAmount_c {get;set;}
		public Boolean SBQQ_ComponentUpliftedByPackage_c {get;set;}
		public String SBQQ_ProductName_c {get;set;}
		public Boolean SBQQ_Existing_c {get;set;}
		public Integer SBQQ_OptionLevel_c {get;set;}
		public Boolean SBQQ_CarryoverLine_c {get;set;}
		public Boolean SBQQ_AllowAssetRefund_c {get;set;}
		public Integer SBQQ_RegularPrice_c {get;set;}
		public Boolean Inherit_List_Price_from_Package_c {get;set;}
		public Boolean Initialized_c {get;set;}
		public Integer Component_Quantity_Total_c {get;set;}
		public Integer List_Price_c {get;set;}
		public Integer SBQQ_EffectiveQuantity_c {get;set;}
		public String Product_Line_c {get;set;}
		public Boolean Use_Tier_Upper_Bound_c {get;set;}
		public String Product_or_Service_c {get;set;}
		public String Quantity_Source_Field_c {get;set;}
		public Integer OSCPQ_Net_ARR_c {get;set;}
		public Double OSCPQ_Net_MRR_c {get;set;}
		public String OSCPQ_External_Id_c {get;set;}
		public Boolean Primary_Product_c {get;set;}
		public Boolean Virtual_Bundle_c {get;set;}
		public Integer SBQQ_RegularTotal_c {get;set;}
		public String SBQQ_ProductCode_c {get;set;}
		public Boolean Exclude_From_Component_Sum_c {get;set;}
		public Integer Previous_Customer_Price_c {get;set;}
		public String SBQQ_ProductFamily_c {get;set;}
		public Integer SBQQ_Markup_c {get;set;}
		public String SBQQ_Product_r {get;set;}
		public String SBQQ_ProductOption_r {get;set;}
		public String SBQQ_RenewedSubscription_r {get;set;}
		public String SBQQ_RequiredBy_r {get;set;}
		public String SBQQ_Group_r {get;set;}
		public String SBQQ_Quote_r {get;set;}
		public String SBQQ_TermDiscountSchedule_r {get;set;}
		public String SBQQ_DiscountSchedule_r {get;set;}
		public String SBQQ_ContractedPrice_r {get;set;}

		public Line(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'attributes') {
							attributes = new Attributes(parser);
						} else if (text == 'Id') {
							Id = parser.getText();
						} else if (text == 'CurrencyIsoCode') {
							CurrencyIsoCode = parser.getText();
						} else if (text == 'SBQQ_Quote_c') {
							SBQQ_Quote_c = parser.getText();
						} else if (text == 'SBQQ_RequiredBy_c') {
							SBQQ_RequiredBy_c = parser.getText();
						} else if (text == 'SBQQ_Description_c') {
							SBQQ_Description_c = parser.getText();
						} else if (text == 'SBQQ_Product_c') {
							SBQQ_Product_c = parser.getText();
						} else if (text == 'SBQQ_ProductOption_c') {
							SBQQ_ProductOption_c = parser.getText();
						} else if (text == 'SBQQ_Number_c') {
							SBQQ_Number_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_DynamicOptionId_c') {
							SBQQ_DynamicOptionId_c = parser.getText();
						} else if (text == 'SBQQ_PricebookEntryId_c') {
							SBQQ_PricebookEntryId_c = parser.getText();
						} else if (text == 'SBQQ_HasConsumptionSchedule_c') {
							SBQQ_HasConsumptionSchedule_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Hidden_c') {
							SBQQ_Hidden_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Taxable_c') {
							SBQQ_Taxable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_SubscriptionPricing_c') {
							SBQQ_SubscriptionPricing_c = parser.getText();
						} else if (text == 'SBQQ_DefaultSubscriptionTerm_c') {
							SBQQ_DefaultSubscriptionTerm_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_SubscriptionScope_c') {
							SBQQ_SubscriptionScope_c = parser.getText();
						} else if (text == 'SBQQ_ProductSubscriptionType_c') {
							SBQQ_ProductSubscriptionType_c = parser.getText();
						} else if (text == 'SBQQ_SubscriptionType_c') {
							SBQQ_SubscriptionType_c = parser.getText();
						} else if (text == 'SBQQ_ChargeType_c') {
							SBQQ_ChargeType_c = parser.getText();
						} else if (text == 'SBQQ_BillingType_c') {
							SBQQ_BillingType_c = parser.getText();
						} else if (text == 'Name') {
							Name = parser.getText();
						} else if (text == 'SBQQ_AdditionalDiscount_c') {
							SBQQ_AdditionalDiscount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Bundled_c') {
							SBQQ_Bundled_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ComponentDiscountedByPackage_c') {
							SBQQ_ComponentDiscountedByPackage_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_CostEditable_c') {
							SBQQ_CostEditable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_CustomerPrice_c') {
							SBQQ_CustomerPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ListPrice_c') {
							SBQQ_ListPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_OriginalPrice_c') {
							SBQQ_OriginalPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_NetPrice_c') {
							SBQQ_NetPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_NetTotal_c') {
							SBQQ_NetTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_NonDiscountable_c') {
							SBQQ_NonDiscountable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_NonPartnerDiscountable_c') {
							SBQQ_NonPartnerDiscountable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_Optional_c') {
							SBQQ_Optional_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_OptionType_c') {
							SBQQ_OptionType_c = parser.getText();
						} else if (text == 'SBQQ_BundledQuantity_c') {
							SBQQ_BundledQuantity_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Bundle_c') {
							SBQQ_Bundle_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_PartnerPrice_c') {
							SBQQ_PartnerPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PriceEditable_c') {
							SBQQ_PriceEditable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProratedListPrice_c') {
							SBQQ_ProratedListPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_PricingMethod_c') {
							SBQQ_PricingMethod_c = parser.getText();
						} else if (text == 'SBQQ_PricingMethodEditable_c') {
							SBQQ_PricingMethodEditable_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProrateMultiplier_c') {
							SBQQ_ProrateMultiplier_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Quantity_c') {
							SBQQ_Quantity_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_RenewedSubscription_c') {
							SBQQ_RenewedSubscription_c = parser.getText();
						} else if (text == 'SBQQ_SpecialPrice_c') {
							SBQQ_SpecialPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentTotal_c') {
							SBQQ_ComponentTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentCost_c') {
							SBQQ_ComponentCost_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentListTotal_c') {
							SBQQ_ComponentListTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Renewal_c') {
							SBQQ_Renewal_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProratedPrice_c') {
							SBQQ_ProratedPrice_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Uplift_c') {
							SBQQ_Uplift_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_UpliftAmount_c') {
							SBQQ_UpliftAmount_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ComponentUpliftedByPackage_c') {
							SBQQ_ComponentUpliftedByPackage_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_ProductName_c') {
							SBQQ_ProductName_c = parser.getText();
						} else if (text == 'SBQQ_Existing_c') {
							SBQQ_Existing_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_OptionLevel_c') {
							SBQQ_OptionLevel_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_CarryoverLine_c') {
							SBQQ_CarryoverLine_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_AllowAssetRefund_c') {
							SBQQ_AllowAssetRefund_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_RegularPrice_c') {
							SBQQ_RegularPrice_c = parser.getIntegerValue();
						} else if (text == 'Inherit_List_Price_from_Package_c') {
							Inherit_List_Price_from_Package_c = parser.getBooleanValue();
						} else if (text == 'Initialized_c') {
							Initialized_c = parser.getBooleanValue();
						} else if (text == 'Component_Quantity_Total_c') {
							Component_Quantity_Total_c = parser.getIntegerValue();
						} else if (text == 'List_Price_c') {
							List_Price_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_EffectiveQuantity_c') {
							SBQQ_EffectiveQuantity_c = parser.getIntegerValue();
						} else if (text == 'Product_Line_c') {
							Product_Line_c = parser.getText();
						} else if (text == 'Use_Tier_Upper_Bound_c') {
							Use_Tier_Upper_Bound_c = parser.getBooleanValue();
						} else if (text == 'Product_or_Service_c') {
							Product_or_Service_c = parser.getText();
						} else if (text == 'Quantity_Source_Field_c') {
							Quantity_Source_Field_c = parser.getText();
						} else if (text == 'OSCPQ_Net_ARR_c') {
							OSCPQ_Net_ARR_c = parser.getIntegerValue();
						} else if (text == 'OSCPQ_Net_MRR_c') {
							OSCPQ_Net_MRR_c = parser.getDoubleValue();
						} else if (text == 'OSCPQ_External_Id_c') {
							OSCPQ_External_Id_c = parser.getText();
						} else if (text == 'Primary_Product_c') {
							Primary_Product_c = parser.getBooleanValue();
						} else if (text == 'Virtual_Bundle_c') {
							Virtual_Bundle_c = parser.getBooleanValue();
						} else if (text == 'SBQQ_RegularTotal_c') {
							SBQQ_RegularTotal_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ProductCode_c') {
							SBQQ_ProductCode_c = parser.getText();
						} else if (text == 'Exclude_From_Component_Sum_c') {
							Exclude_From_Component_Sum_c = parser.getBooleanValue();
						} else if (text == 'Previous_Customer_Price_c') {
							Previous_Customer_Price_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_ProductFamily_c') {
							SBQQ_ProductFamily_c = parser.getText();
						} else if (text == 'SBQQ_Markup_c') {
							SBQQ_Markup_c = parser.getIntegerValue();
						} else if (text == 'SBQQ_Product_r') {
							SBQQ_Product_r = parser.getText();
						} else if (text == 'SBQQ_ProductOption_r') {
							SBQQ_ProductOption_r = parser.getText();
						} else if (text == 'SBQQ_RenewedSubscription_r') {
							SBQQ_RenewedSubscription_r = parser.getText();
						} else if (text == 'SBQQ_RequiredBy_r') {
							SBQQ_RequiredBy_r = parser.getText();
						} else if (text == 'SBQQ_Group_r') {
							SBQQ_Group_r = parser.getText();
						} else if (text == 'SBQQ_Quote_r') {
							SBQQ_Quote_r = parser.getText();
						} else if (text == 'SBQQ_TermDiscountSchedule_r') {
							SBQQ_TermDiscountSchedule_r = parser.getText();
						} else if (text == 'SBQQ_DiscountSchedule_r') {
							SBQQ_DiscountSchedule_r = parser.getText();
						} else if (text == 'SBQQ_ContractedPrice_r') {
							SBQQ_ContractedPrice_r = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Line consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}


public static JSON2Apex parse(String json) {
System.JSONParser parser = System.JSON.createParser(json);
return new JSON2Apex(parser);
}

public static void consumeObject(System.JSONParser parser) {
Integer depth = 0;
do {
System.JSONToken curr = parser.getCurrentToken();
if (curr == System.JSONToken.START_OBJECT ||
curr == System.JSONToken.START_ARRAY) {
depth++;
} else if (curr == System.JSONToken.END_OBJECT ||
curr == System.JSONToken.END_ARRAY) {
depth--;
}
} while (depth > 0 && parser.nextToken() != null);
}







    private static List<ConfigurationData> arrayOfConfigurationData(System.JSONParser p) {
    List<ConfigurationData> res = new List<ConfigurationData>();
    if (p.getCurrentToken() == null) p.nextToken();
    while (p.nextToken() != System.JSONToken.END_ARRAY) {
    res.add(new ConfigurationData(p));
    }
    return res;
    }

        public class Options {
            public String optionId {get;set;}
            public Boolean selected {get;set;}
            public String ProductCode {get;set;}
            public String ProductName {get;set;}
            public Integer Quantity {get;set;}
            public ConfigurationData configurationData {get;set;}
            public String Connector_c {get;set;}
			public String Return_Code_c{get;set;}
			public string Codex_c{get;set;}
            public Integer index {get;set;}
            public ReadOnly readOnly {get;set;}
    
            public Options(){
    
            }
    
            public Options(JSONParser parser) {
                while (parser.nextToken() != JSONToken.END_OBJECT) {
                    if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                        String text = parser.getText();
                        if (parser.nextToken() != JSONToken.VALUE_NULL) {
                            if (text == 'optionId') {
                                optionId = parser.getText();
                            } else if (text == 'selected') {
                                selected = parser.getBooleanValue();
                            } else if (text == 'ProductCode') {
                                ProductCode = parser.getText();
                            } else if (text == 'ProductName') {
                                ProductName = parser.getText();
                            } else if (text == 'Quantity') {
                                Quantity = parser.getIntegerValue();
                            } else if (text == 'configurationData') {
                                configurationData = new ConfigurationData(parser);
                            } else if (text == 'Connector_c') {
                                Connector_c = parser.getText();
                            }else if (text == 'Return_Code_c') {
                                Return_Code_c = parser.getText();
                            }else if (text == 'Codex_c') {
                                Codex_c = parser.getText();
                            }else if (text == 'index') {
                                index = parser.getIntegerValue();
                            } else if (text == 'readOnly') {
                                readOnly = new ReadOnly(parser);
                            } else {
                                System.debug(LoggingLevel.WARN, 'Option4 consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}





    private static List<Options> arrayOfOptions(System.JSONParser p) {
    List<Options> res = new List<Options>();
    if (p.getCurrentToken() == null) p.nextToken();
    while (p.nextToken() != System.JSONToken.END_ARRAY) {
    res.add(new Options(p));
    }
    return res;
    }

	public class ConfigurationData {
		public String Connector_c {get;set;}
		public String Return_Code_c{get;set;}
		public string Codex_c{get;set;}
		
        public ConfigurationData(){

		}
		public ConfigurationData(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Connector_c') {
						Connector_c = parser.getText();
						}else if (text == 'Return_Code_c') {
						 Return_Code_c = parser.getText();
						}else if (text == 'Codex_c') {
					     Codex_c = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ConfigurationData consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
}