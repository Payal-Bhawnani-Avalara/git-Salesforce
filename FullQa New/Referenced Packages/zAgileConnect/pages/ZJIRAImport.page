<apex:page action="{!if(!isSysAdmin,urlFor('/apex/zsfjira__ZInsufficientPriv'), null)}"
           controller="zsfjira.ZJIRAImportController" setup="true">
    <apex:includeScript value="/soap/ajax/30.0/connection.js"/> 
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-1.9.1.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jquery_jqz_noconflict)}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-ui-1.10.3.custom.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__jQuery, '/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__datetimepicker, '/jquery.datetimepicker.js')}"  />
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__datetimepicker, '/jquery.datetimepicker.css')}" />
    <apex:slds />
    <script type="text/javascript">
    Visualforce.remoting.timeout = 120000; 
    
    if (!window.console) window.console = {};
    if (!window.console.log) window.console.log = function () {};
    </script>
    <style>
        .hiddenContainer {
        display: none;
        }
        div.loader:after{
        background-image: url({!URLFOR($Resource.zsfjira__zAgileResources, 'images/loader.gif')});
        background-size: 24px 24px;
        display: inline-block;
        width: 24px; 
        height: 24px;
        content:"";
        }
        div.loader{
        display: inline-block;
        }
        div#zUpStatusBody{
        display: inline;
        }
        .divline{
        height: 1px;
        background: #CFD7E6;
        margin-top:1%;                  
        }
        .messageText {
        color: white !important;
        }
        .slds .slds-input {
        width: auto;
        }
    </style>    
    <div class="slds slds-scope">
        <div class="slds-page-header">
            <div class="slds-grid">
                <div class="slds-col slds-has-flexi-truncate">
                    <p class="slds-text-body--small">JIRA Data Import</p>
                    <div class="slds-grid">
                        <div class="slds-grid slds-no-space">
                            <h1 class="slds-text-heading--medium slds-truncate">
                                Import Salesforce-related Issues from JIRA
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
        </div> 
        <apex:form >
            <div class="slds-text-body--regular slds-m-vertical--medium">
                This section allows you to import Salesforce-related Issues from JIRA. This is useful after a Salesforce data restore or
                if there is a need to import into Salesforce some missing relationships from JIRA.
            </div>
            <div id="step1" style="display:none;">
                <div class="slds-grid">
                    <div class="slds-card slds-m-around--large slds-col" style="margin-top: 5px;">
                        <div class="slds-card__header slds-grid grid--flex-spread">
                            <h2 class="slds-text-heading--small slds-truncate">JIRA Data Import</h2>
                        </div>
                        <div class="divline"> </div><br/>
                        <div class="slds-card__body slds-p-horizontal--small">
                            <div class="slds-form-element">
                                <label class="slds-form-element__label">Import relations for Object:</label>
                                <div class="slds-form-element__control">
                                    <div class="slds-select_container slds-size--2-of-5">
                                        <select id="sObjectsSelect" size="0" class="slds-select"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-card__body slds-p-horizontal--small">                                                
                            Click on next to continue.                           
                        </div>
                    </div>
                </div>
                <div class="slds-text-align--center">
                    <input class="slds-button slds-button--brand" 
                           onclick="quickCount();return false;" id="quickButton"
                           type="button" value="Next"/>
                    <apex:commandButton styleClass="slds-button slds-button--neutral"
                                        action="{!redirectZagileSettings}" value="Return"/>
                </div>
            </div>
            <div id="step2" style="display:none;">                    
                <div class="slds-grid">
                    <div class="slds-card slds-m-around--large slds-col" style="margin-top: 5px;">
                        <div class="slds-card__header slds-grid grid--flex-spread">
                            <h2 class="slds-text-heading--small slds-truncate">Confirmation</h2>
                        </div>
                        <div class="divline"> </div>
                        <div class="slds-card__body slds-p-horizontal--small">  
                            <div id="st2_result"></div>                                                        
                        </div>
                    </div>
                </div>
                <div class="slds-text-align--center">
                    <input onclick="previous();return false;" id="prevButton" 
                           type="button" value="Previous" class="slds-button slds-button--brand"/>
                    <input onclick="sync();return false;" id="syncButton" 
                           type="button" value="Confirm" class="slds-button slds-button--brand"/>
                    <apex:commandButton action="{!redirectZagileSettings}" value="Return"
                                        styleClass="slds-button slds-button--neutral"/>
                </div>
            </div>
            <br/>
            <div class='hiddenContainer'>
                <div id="zUpError" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error'>
                    <span/>
                </div>
                <div id="zUpCorrect" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info'>
                    <span/>
                </div>
                <div id="zUpStatus" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info'>
                    <span/>
                </div>
            </div>
            <br/>
            <div style="width: 100%;display:none;" align='center' class='loader'></div>
            <br/><br/>
            <div style="display:none;" align='center' id="auxBtnReturn">
                <apex:commandButton action="{!redirectZagileSettings}" value="Return"
                                    styleClass="slds-button slds-button--neutral"/>
            </div>
        </apex:form>
    </div>
    <script>
    var respTotal = 0;
    var lastSync = null;
    var conceptPrefixes = {'ALL':null};

    $jqz(function(){
        noMessage();
        $jqz("div.hiddenContainer").each(function(i){
            $jqz(this).removeAttr("class");
        });        
        $jqz("#zUpStatus span").html('<div id="zUpStatusBody"></div>');
        $jqz("#zUpStatus span").append('<div id="percentage" style="display: inline;float: right;">0%</div>');
        $jqz("#zUpStatus span").append('<div id="zUpStatusProgress"></div>');
        $jqz("#zUpStatus span").append('<div id="zProgressDetails"></div>');
        $jqz("#zUpStatus span").find("td.messageCell").css('width','100%');
        $jqz("#zUpStatusProgress").css('display','none');  
        $jqz("#zUpStatusProgress").progressbar({
            value: 0
        });        
        $jqz("#zUpStatusProgress").height(15);


        noMessage();
        $jqz("#zUpCorrect").css('display','block');
        $jqz("#zUpCorrect span").html("Retrieving Information...");
        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ZJIRAImportController.getZIssueMeta}',
            function(result, event) {
                if(event.status){
                    var concepts =[];
                    for(var object in result.describeZIssueRelationships){
                        if(object in result.describeZIssueSf){
                            concepts.push({
                                name:object,
                                label:result.describeZIssueRelationships[object].objectLabel
                            });
                            conceptPrefixes[object] = result.describeZIssueRelationships[object].objectPrefix;
                        }
                    }
                    concepts.sort(function(a,b){ return (a.label < b.label)?-1:1; });

                    concepts.forEach(function(concept){
                        $jqz('#sObjectsSelect').append($jqz('<option>', {
                            value: concept.name,
                            text: htmlDecode(concept.label)
                        }));
                    });

                    if(concepts.length>1){
                        $jqz('#sObjectsSelect').prepend($jqz('<option>', {
                            value: 'ALL',
                            text: 'All'
                        }));
                    }
                    $jqz('#sObjectsSelect').val('Case');

                    loadStatus(true,true);
                }else{
                    noMessage();
                    $jqz("#zUpError").css('display','block');
                    $jqz("#zUpError").find('span').html(
                        "Problems getting Information: "+event.message);
                }
            }
        );


    });
    function previous(){
        noMessage();
        $jqz("#step1").slideDown("slow");
        $jqz("#step2").css('display','none');
    }

    function quickCount(){
        noMessage();
        $jqz("#percentage").html('');
        $jqz(".loader").show();
        $jqz("#auxBtnReturn").show();
          
        $jqz("#syncButton").attr("disabled", "disabled");        
        $jqz("#zUpStatus").css('display','block');
        $jqz("#zUpStatusBody").html('Calculating...');
        $jqz("#zUpStatusProgress").css('display','none');
        $jqz("#zProgressDetails").html('');
        $jqz("#step1").slideUp();

        var concept = $jqz('#sObjectsSelect').val();
                
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZJIRAImportController.quickCountByConcept}',concept, conceptPrefixes[concept],
            function(result, event) {
                $jqz(".loader").hide();
                $jqz("#auxBtnReturn").hide();
                if(event.status){
                    if(result.success){
                        if(result.total!=0){
                            respTotal = result.total;
                            if(result.isOnDemand){
                                $jqz("#st2_result").html(result.total+
                                                         ' JIRA Issues related to Salesforce Objects will be imported into Salesforce. ' +
                                                         'This operation will not remove existing Issue ' +
                                                         'data in Salesforce.');
                            }else{
                                $jqz("#st2_result").html(result.total+
                                                         ' Salesforce-Issue relationships will be imported in Salesforce. '+
                                                         'This operation will not remove existing Issue ' +
                                                         'data in Salesforce.');
                            }
                            $jqz("#syncButton").removeAttr("disabled");                            
                            $jqz("#step2").slideDown("slow");
                            $jqz("#zUpStatus").css('display','none');
                        }else{
                            $jqz("#step2").slideDown("slow");
                            $jqz("#zUpStatus").css('display','none');
                            $jqz("#st2_result").html('There is no Salesforce-related data in JIRA');
                        }
                    }else{
                        $jqz("#step2").slideDown("slow");
                        $jqz("#zUpStatus").css('display','none');
                        $jqz("#st2_result").html('<div style="color:red;">'+
                                                 'Error retrieving Salesforce-related Issue data, check JIRA connectivity and '+
                                                 'try again.</div>');
                    }
                }
                else{
                    $jqz("#step2").slideDown("slow");
                    $jqz("#zUpStatus").css('display','none');
                    $jqz("#st2_result").html('<div style="color:red;">'+
                                             'Error, check JIRA connectivity and '+
                                             'try again.</div>');
                }
            }
        );
        
        return;
    }
    function sync(){
        noMessage();
        $jqz("#percentage").html('');
        $jqz("#zProgressDetails").html('');
        $jqz("#step2").slideUp("slow");        
        $jqz("#zUpCorrect").css('display','block');
        $jqz("#zUpCorrect span").html("Starting JIRA data import...");

        var concept = $jqz('#sObjectsSelect').val();
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZJIRAImportController.beginInitialImportByConcept}',respTotal,concept,conceptPrefixes[concept],
            function(result, event) {
                if(event.status){
                    if(!result.launchSync){
                        $jqz("#zUpCorrect").css('display','none');
                        $jqz("#zUpError").css('display','block');
                        $jqz("#zUpError span").html(result.message);
                        $jqz("#step1").slideDown("slow");
                    }
                    else{                            
                        loadStatus(false,true);
                    }
                }
                else{
                    $jqz("#zUpCorrect").css('display','none');
                    $jqz("#zUpError").css('display','block');
                    $jqz("#zUpError span").html(
                        "Problems starting JIRA data import Job.");
                    $jqz("#step1").slideDown("slow");
                }
            }
        );
    }
    function htmlDecode(value){
        return $jqz('<div/>').html(value).text();
    }
    function noMessage(){
        $jqz("#zUpError").css('display','none');
        $jqz("#zUpCorrect").css('display','none');
        $jqz("#zUpStatus").css('display','none');
    }
    function loadStatus(showLoading,renderStep_1){                    
        if(showLoading){
            noMessage();
            $jqz("#zUpCorrect").css('display','block');
            $jqz("#zUpCorrect span").html("Retrieving Information...");
        }                      
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZJIRAImportController.getInformation}',
            function(result, event) {
                noMessage();                
                if (event.status) {
                    window.console.log('result:');
                    window.console.log(result);                    
                    if(result.lastSync!=null){
                        lastSync = result.lastSync;
                        $jqz("#setFilters").remove();
                        $jqz("#step1").find('div.pbBody').append('<span id="setFilters">'+
                                                                 '<a style="cursor:pointer;text-decoration:underline;" onclick="setFilters();return false;">'+
                                                                 'Set filters</a> to last successful sync '+
                                                                 '('+formatDate(new Date(result.lastSync))+')</span>');                                                 
                    }                                      
                    var resultMessage = result.message;
                    resultMessage = resultMessage.replace(/\n/g,'<br/>');
                    if(result.typeMessage == 'W'){
                        $jqz("#zUpStatus").css('display','block');
                        $jqz("#zUpStatusBody").html(resultMessage);
                    }else if(result.typeMessage == 'E'){
                        $jqz("#zUpError").css('display','block');
                        $jqz("#zUpError span").html(resultMessage);
                    }else if(result.typeMessage == 'I'){
                        $jqz("#zUpCorrect").css('display','block');
                        $jqz("#zUpCorrect span").html(resultMessage);
                    }
                    if(result.allowSync){
                        $jqz("#quickButton").removeAttr("disabled");
                        if(renderStep_1){
                            $jqz("#step1").slideDown("slow");
                        }
                    }                    
                   
                    if(result.inProgress){
                        $jqz(".loader").show();
                        $jqz("#auxBtnReturn").show();
                        if(result.progressResult){
                            $jqz("#zUpStatusProgress").css('display','block');
                            $jqz("#zUpStatusProgress").progressbar({
                                value: (result.progressResult.jobItemsProcessed*100)/result.progressResult.totalJobItems
                            });
                            $jqz("#percentage").html(Math.round((result.progressResult.jobItemsProcessed*100)/result.progressResult.totalJobItems)+'%');
                            $jqz("#zProgressDetails").html('Processing Batch...'+
                                                           result.progressResult.jobItemsProcessed+'/'+
                                                          result.progressResult.totalJobItems);
                        }else{
                            $jqz("#zUpStatusProgress").css('display','none');
                            $jqz("#percentage").html('');
                            $jqz("#zProgressDetails").html('');
                        }
                        setTimeout(function(){ loadStatus(false,true); }, 5000);
                    }else{
                        $jqz(".loader").hide();
                        $jqz("#auxBtnReturn").hide();
                    }
                }
                else{                    
                    $jqz("#zUpError").css('display','block');
                    $jqz("#zUpError span").html(
                        "Problems getting Information.");
                }
            }            
        );
    }    
    function formatDate(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? 'PM' : 'AM';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0'+minutes : minutes;
        var strTime = hours + ':' + minutes + ' ' + ampm;
        return formatNumber(date.getMonth()+1,2) + "/" + formatNumber(date.getDate(),2) + "/" + date.getFullYear() + " " + strTime;
    }
    function formatNumber(number,size){
        var strNum = number+'';
        while(strNum.length<size){
            strNum = '0'+strNum;
        }
        return strNum;
    }
    function setFilters(){
        var strDate = formatDate(new Date(lastSync));
        $jqz("#updated-after-date").val(strDate);   
        $jqz("#updated-before-date").val('');
        $jqz("#created-after-date").val('');
        $jqz("#created-before-date").val('');
    }
    </script>
</apex:page>