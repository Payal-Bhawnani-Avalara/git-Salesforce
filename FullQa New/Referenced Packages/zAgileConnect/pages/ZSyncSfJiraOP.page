<apex:page action="{!if(!isSysAdmin,urlFor('/apex/zsfjira__ZInsufficientPriv'), null)}"
           controller="zsfjira.ZSettingsController" setup="true">
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-1.9.1.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jquery_jqz_noconflict)}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-ui-1.10.3.custom.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__dynatree_1_2_4_js)}" />
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__jQuery, '/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />
    <apex:slds />
    <style>        
        .pageMessageContainer {
        display: none!important;
        }
        .divline{
        height: 1px;
        background: #CFD7E6;
        margin-top:1%;                  
        }
        .messageText {
        color: white !important;
        }
        .slds .slds-input {
        width: auto;
        }
        div.pageMessageContainer>span{
        width:100%;
        }
    </style>
    <script>
    Visualforce.remoting.timeout = 120000;
    </script>
    <div class="slds slds-scope">
        <div class="slds-page-header">
            <div class="slds-grid">
                <div class="slds-col slds-has-flexi-truncate">
                    <p class="slds-text-body--small">Syncing Salesforce Data in JIRA</p>
                    <div class="slds-grid">
                        <div class="slds-grid slds-no-space">
                            <h1 class="slds-text-heading--medium slds-truncate" title="Settings">
                                Refresh Salesforce properties in JIRA
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>   
        <div class="pageMessageContainer">
            <div id="zSyncInfoMessage" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info'>
                <span/>
            </div>
            <div id="zSyncWarnMessage" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_warning'>
                <span/>
            </div>
        </div>
        <apex:form id="ZFormDataSync">
            <span id="mainLoader">
                <div id="slds-loader" class="slds-spinner_container slds-is-fixed zc-hide" >
                    <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand" >
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
            </span>
            <span id="errorPanel" style="display:none;">
                <br/>
                <div class="slds-grid" >
                    <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error">
                        <p id="errorMessage"></p>
                    </div>
                </div> 
            </span>
            <div id="panel" class="slds-grid" style="display:none;">
                <div class="slds-card slds-m-around--large slds-col">
                    <div class="slds-card__header slds-grid grid--flex-spread">
                        <h2 class="slds-text-heading--small slds-truncate">Syncing Salesforce Data in JIRA</h2>
                    </div>
                    <div class="divline"> </div>
                    <br/>
                    <div class="slds-card__body slds-p-horizontal--small">
                        <p>This option updates Salesforce data cached in JIRA. When
                            properties are added or updated in Salesforce settings, the sync
                            action will refresh them in JIRA.
                            <br/> By clicking on the Synchronize
                            Updated Properties button, all Salesforce objects stored in JIRA
                            will be updated with the new properties.
                            <br/> By clicking on the
                            Synchronize All button, all Salesforce objects stored in JIRA will
                            be updated with all the new properties and the existing ones.
                        </p>
                    </div>
                    <div class="slds-card__body slds-p-horizontal--small">
                        <div class="slds-form-element">
                            <label class="slds-form-element__label">Object to Synchronize:</label>
                            <div class="slds-form-element__control">
                                <div class="slds-select_container slds-size--2-of-5">
                                    <select class="slds-select" multiselect="false" size="0" id = "sObjectsSelect"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>                
            </div>       
            <div class="slds-text-align--center slds-m-vertical--medium">
                <button id="syncNewProperties" disabled="disabled"
                        class="slds-button slds-button--brand"
                        onclick="synchronizeProperties('syncNew'); return false;">Synchronize
                    Updated Properties</button>
                <button id="syncAllProperties" disabled="disabled"
                        class="slds-button slds-button--brand"
                        onclick="synchronizeProperties('syncAll'); return false;">Synchronize
                    All</button>
                <button class="slds-button slds-button--neutral"
                        onclick="returnToMainSettings(); return false;">
                    Return
                </button>
            </div>
        </apex:form>
        <div class="pageMessageContainer">
            <div id="zSyncCorrectMessage" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info'>
                <span/>
            </div>
            <div id="zSyncErrorMessage" class='slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error' >
                <span/>
            </div>
        </div>
    </div>
    <script>
    console = console ? console : {"log" : function(){}};           
    
    $jqz(function() {
        $jqz("#zSyncInfoMessage").hide();
        $jqz("#zSyncWarningMessage").hide();
        $jqz("#zSyncCorrectMessage").hide();
        $jqz("#zSyncErrorMessage").hide();
        $jqz("#zSyncWarnMessage").hide();

        $jqz(".pageMessageContainer").removeClass('pageMessageContainer');

        initSyncInfo();
    });                
    function synchronizeProperties(operation){
        var concept = $jqz('#sObjectsSelect').val();
        disableSyncButtons();
        hideResultMessages(); 
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZSettingsController.synchronizeDataOfConcept}',operation,concept,
            function(result, event){
                var enableButtons = true;
                if (event.status && result != null) {
                    showSyncInfoMessage(result);
                    showNonAccessibleProperties(result);
                    if( result.sf_status_code == 200 ){ //If sync is valid, not show info message
                        $jqz("#zSyncInfoMessage").hide("fast", function(){});
                        $jqz("#zSyncWarnMessage").hide("fast", function(){});
                        enableButtons = false;
                    }
                    
                    if( result.sf_status_code && result.sf_status_code != 409 )//Not show message if other process is running
                        showSyncResultMessages(result);
                    
                }
                console.log(result);
                if( result.sf_status_code && result.sf_status_code == 409 ){
                    //If other process is running not enable buttons.
                    enableButtons = false;
                    $jqz("#zSyncWarnMessage").hide("fast", function(){});
                }                
                if( enableButtons ){
                    enableSyncButtons();
                }
            }
        );
    }
    function htmlDecode(value){
        return $jqz('<div/>').html(value).text();
    }
    function sizeOfMap(map){
        if(map==null)return 0;

        var size=0;
        for(var key in map){
            size++;
        }
        return size;
    }
    function initSyncInfo(){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZSettingsController.getZIssueMetaWithSharedFields}',
            function(zIssueMeta, event){
                window.console.log('zIssueMeta',zIssueMeta);
                if (event.status){
                    var concepts =[{name:'Case',label:'Case'}];
                    for(var object in zIssueMeta.describeZIssueRelationships){
                        if(object=='Case')continue;
                        if(object in zIssueMeta.describeZIssueSf){
                            var fieldsMeta = zIssueMeta.describeZIssueSf[object];
                            if(sizeOfMap(fieldsMeta.sharedFields)>0){
                                concepts.push({
                                    name:object,
                                    label:zIssueMeta.describeZIssueRelationships[object].objectLabel
                                });
                            }
                        }
                    }
                    concepts.sort(function(a,b){ return (a.label < b.label)?-1:1; });

                    concepts.forEach(function(concept){
                        $jqz('#sObjectsSelect').append($jqz('<option>', {
                            value: concept.name,
                            text: htmlDecode(concept.label)
                        }));
                    });

                    if(concepts.length>1){
                        $jqz('#sObjectsSelect').prepend($jqz('<option>', {
                            value: 'all',
                            text: 'All'
                        }));
                    }

                    $jqz('#sObjectsSelect').val('Case');
                    
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.ZSettingsController.getSyncInfo}',
                        function(result, event){
                            $jqz('#mainLoader').hide();
                            if (event.status && result != null ) {
                                $jqz('#panel').show();
                                disableOrEnableButtons(result);
                                showSyncInfoMessage(result);
                                if( result.sf_status_code && result.sf_status_code != 409 ){ //not show if other process is running
                                    showNonAccessibleProperties(result);
                                }
                            }else{
                                $jqz('#errorMessage').html("Problems loading the panel: "+event.message);
                                $jqz('#errorPanel').show();
                            }
                        }
                    );
                }else{
                    $jqz('#errorMessage').html("Problems loading the panel: "+event.message);
                    $jqz('#errorPanel').show();
                    $jqz('#mainLoader').hide();
                }
            }
        );
        
    }    
    function disableOrEnableButtons(result){ 
        if( result.can_sync != null ){
            if( result.can_sync == true ){
                enableSyncButtons();
            }else{
                disableSyncButtons();
                showSyncResultMessages(result);
            }
        }
    }    
    function disableSyncButtons(){
        $jqz("#syncNewProperties").attr("disabled", "disabled");
        $jqz("#syncAllProperties").attr("disabled", "disabled");
    }
    
    function enableSyncButtons(){
        $jqz("#syncNewProperties").removeAttr("disabled");
        $jqz("#syncAllProperties").removeAttr("disabled");
    }
    
    function hideResultMessages(){
        $jqz("#zSyncCorrectMessage").hide("fast", function(){});
        $jqz("#zSyncErrorMessage").hide("fast", function(){});
    }
    
    function showSyncInfoMessage(result){           
        if( result.status_info ){
            var infoHtml = '';
            var len = result.status_info.length;
            for( var i = 0 ; i < len ; ++i ){
                if( i > 0 )
                    infoHtml += '<br/>';
                infoHtml += result.status_info[i];
            }
            $jqz("#zSyncInfoMessage").show("fast", function(){});
            $jqz("#zSyncInfoMessage span").html(infoHtml);
        }
        console.log(result);
    }       
    function showSyncResultMessages(result){
        var message = '';
        if( result.messages ){
            var messages = result.messages;
            for( var i = 0 ; i < messages.length ; ++i ){
                if( i > 0 )
                    message += ' ';
                message += messages[i];
            }
            message = message.trim();
        }
        if( message.length > 0 ){
            if(result.can_sync){
                $jqz("#zSyncErrorMessage").hide("fast", function(){});
                $jqz("#zSyncCorrectMessage").show("fast", function(){});
                $jqz("#zSyncCorrectMessage span").html(message);
            }else{
                $jqz("#zSyncCorrectMessage").hide("fast", function(){});
                $jqz("#zSyncErrorMessage").show("fast", function(){});
                $jqz("#zSyncErrorMessage span").html(message);
            }
        }
    }    
    function showNonAccessibleProperties(result){
        if( result.json_hidden_fields ){
            var obj = $jqz('#zAuxDiv');
            obj.html( result.json_hidden_fields );
            var hiddenFields = $jqz.parseJSON( obj.text() );
            console.log(hiddenFields);
            
            var warnMessage = "The following properties, may have been removed or hidden. These properties weren't considered in last sync process.";
            warnMessage += "<br />";
            warnMessage += "<ul>";
            var showMessage = false;
            for( var key in hiddenFields ){
                var fieldsByKey = hiddenFields[ key ];
                if( fieldsByKey && fieldsByKey.length > 0 ){
                    warnMessage += "<li>";
                    warnMessage += key + ": ";
                    for( var i = 0 ; i < fieldsByKey.length ; ++i ){
                        if( i > 0 )
                            warnMessage += ", ";
                        warnMessage += fieldsByKey[ i ];
                        showMessage = true;
                    }
                    warnMessage += "</li>"                        
                }
            }
            warnMessage += "</ul>";
            if( showMessage ){
                $jqz("#zSyncWarnMessage").show("fast", function(){});
                $jqz("#zSyncWarnMessage span").html(warnMessage);
            }
        }
    }
    function returnToMainSettings(){
        var settingsPage ='/apex/zsfjira__zAgile_Settings';
        if (typeof sforce != 'undefined' && sforce && sforce.one) {
            sforce.one.back(false);
        }else{
            window.location.replace(settingsPage);
        }
    }
    </script>
</apex:page>