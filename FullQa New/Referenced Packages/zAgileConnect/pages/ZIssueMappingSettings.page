<apex:page action="{!if(!isSysAdmin,urlFor('/apex/zsfjira__ZInsufficientPriv'), null)}"
           controller="zsfjira.ZIssueMappingSettings" setup="true">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-1.9.1.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jquery_jqz_noconflict)}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-ui-1.10.3.custom.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__dynatree_1_2_4_js)}" />
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__jQuery, '/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />

    <apex:slds />

    <script>
    Visualforce.remoting.timeout = 120000;
    
    var Set = function() {}
    Set.prototype.add = function(o) { this[o] = true; }
    Set.prototype.remove = function(o) { delete this[o]; }
    </script>
    <style>
        ul.sortable {
            list-style-type: none;
            margin: 0;
            padding: 0;
            margin-bottom: 10px;
            cursor: pointer;
        }
        ul.sortable > li {
            margin: 5px;
            padding: 5px;
            width: 450px;
            border: 1px solid #D4DADC;
            border-radius: 4px;
        }

        .ui-widget-content {
            border: 0px!important;
        }

        ul.sortable>li>ul>li {
            width: 420px;
            background-color: #FAFAFA;
        }

        ul.sortable li>span.closeable {
            cursor: pointer;
            float: right;
            height: 12px;
            padding: 3px;
            text-align: center;
            width: 12px;
            cursor: default;
        }
        .undrag{
            color: gray;
        }
        .pageMessageContainer {
            display: none!important;
        }
        .divline{
            height: 1px;
            background: #CFD7E6;
            margin-top:1%;
        }
        .slds-m-vertical--medium {
            margin-bottom: 0rem!important;
        }
        .message{
            margin-left:0px!important
        }
        .closeable{
            cursor:pointer;
        }
        .infoM4 .msgIcon{
            display: none!important;
        }
    </style>
    <div class="slds slds-scope">

        <div class="slds-page-header">
            <div class="slds-grid">
                <div class="slds-col slds-has-flexi-truncate">
                    <p class="slds-text-body--small">Configure Issue fields mapping</p>
                    <div class="slds-grid">
                        <div class="slds-grid slds-no-space">
                            <h1 class="slds-text-heading--medium slds-truncate" title="Settings">zAgileConnect Settings</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <apex:form >
            <apex:actionFunction name="funcRefreshNeedToSync" oncomplete="needToSyncMessage({!needToSyncZIssue},false);"/>
            <div style="display: inline-block;float:right;white-space:nowrap;padding-right:5px;">
                <a href="javascript:void(0)" class="helpLink" onclick="$jqz('#modal-help').show();">Help for this page&nbsp;
                    <!-- <img src="/s.gif" alt="" class="helpIcon"/> -->
                    <span class="slds-icon_container" title="Help for this page">
                      <svg aria-hidden="true" class="slds-icon slds-icon--x-small slds-icon-text-default">
                        <use xlink:href="{!URLFOR($Asset.SLDS,
                                     '/assets/icons/utility-sprite/svg/symbols.svg#help')}"></use>
                      </svg>
                      <span class="slds-assistive-text">Help for this page</span>
                    </span>
                </a>
            </div>

            <div class="slds-m-vertical--medium">
                In this section, you may select Jira Issue fields to be sent to Salesforce.  These fields are available locally in Salesforce via zIssue custom object for access in object layouts and Salesforce Reports.
            </div>
            <div id="loader">
                <div id="slds-loader" class="slds-spinner_container slds-is-fixed zc-hide" >
                    <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand" >
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
            </div>

            <div class="slds-grid" id="main-panel" style="display:none;">
                <div class="slds-card slds-m-around--large slds-col">
                    <div class="slds-card__header slds-grid grid--flex-spread">
                        <h2 class="slds-text-heading--small slds-truncate">Configure Issue fields mapping</h2>
                    </div>
                    <div class="divline"> </div>
                    <div class="slds-card__body slds-p-horizontal--small">
                        <div class="slds-m-around--small">
                            <div id="zUpErrorMessage" class='pageMessageContainer'>
                                <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error" role="alert">
                                    <h2/>
                                </div>
                            </div>
                            <div id="zUpWarningMessage" class='pageMessageContainer' style="margin-bottom:10px;">
                                <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_warning" role="alert">
                                    <span/>
                                </div>
                                <br/>
                            </div>
                            <div class="slds-form-element">
                                <label class="slds-form-element__label">JIRA field:</label>
                                <div class="slds-form-element__control">
                                    <div class="slds-select_container" style="display: inline-block;width: 395px;">
                                        <select class="slds-select" id='lstJiraFields' />
                                    </div>
                                    <button class="slds-button slds-button--neutral" onclick="add();return false;">Add</button>
                                </div>
                            </div>
                            <br/>
                            <div class="ui-widget ui-widget-content ui-corner-all">
                                <ul class="sortable ui-sortable" style='cursor:default' id="jiraSelectedFields">
                                    <li class='ui-sortable-handle undrag' style="cursor:default;color:#54698d;">
                                        <table><tbody><tr><th>JIRA Issue Field</th><th>Salesforce ZIssue Field</th></tr></tbody></table>
                                    </li>
                                </ul>
                            </div>
                            <br/>
                            <div>
                                (*) To map JIRA custom fields, first create a corresponding field with compatible type in
                                <apex:outputPanel rendered="{!zIssueObjId!='NOT FOUND'}">
                                    <a href="/{!zIssueObjId}" target="_blank">ZIssue Custom Object.</a>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!zIssueObjId=='NOT FOUND'}">
                                    ZIssue Custom Object.
                                </apex:outputPanel>
                            </div>
                            <br/>

                            <div id="zDwCorrectMessage" class="pageMessageContainer">
                                <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info" role="alert">
                                    <h2/>
                                </div>
                            </div>

                            <div id="zDwErrorMessage" class='pageMessageContainer'>
                                <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error" role="alert">
                                    <h2/>
                                </div>
                            </div>
                            <div id="zDwWarningMessage" class='pageMessageContainer' style="margin-bottom:10px;">
                                <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_warning" role="alert">
                                    <span/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </apex:form>
        <div style="text-align: center;">
            <button class="slds-button slds-button--brand" onclick="save();return false;" id="buttonSave">Save</button>
            <button class="slds-button slds-button_neutral" onclick="returnToMainSettings();">
                Return
            </button>
        </div>

        <span id="modal-help" style="display:none;">
            <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open">
                <div class="slds-modal__container">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse"
                                title="Close" onclick="$jqz('#modal-help').hide();">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <h2 id="modal-header" class="slds-text-heading_medium slds-hyphenate">Help</h2>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" >
                        <p class="text-warning">
                            Fields added in this section are the JIRA issues fields that will be stored in
                            Salesforce in ZIssue Custom Object. Issue standard fields like priority, status,
                            subject, etc. will be mapped to its corresponding field in Salesforce ZIssue
                            custom object. If you want to store a JIRA issue custom field in Salesforce
                            you will need to first create a custom field with compatible field type in
                            ZIssue Custom Object. Once salesforce custom field is created, it will show up
                            here in the combo box next to the issue custom field, map it and save.
                        </p>
                    </div>
                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral"
                                onclick="$jqz('#modal-help').hide();">Close</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-backdrop_open"></div>
        </span>

        <span id="modal-unsaved-changes" style="display:none;">
            <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open">
                <div class="slds-modal__container">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse"
                                title="Close" onclick="$jqz('#modal-unsaved-changes').hide();">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"
                                     xmlns:xlink="http://www.w3.org/1999/xlink" />
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <h2 id="modal-header" class="slds-text-heading_medium slds-hyphenate">Warning</h2>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" >
                        You have unsaved changes - are you sure you want to leave?
                    </div>
                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral"
                                onclick="$jqz('#modal-unsaved-changes').hide();">Cancel</button>
                        <button class="slds-button slds-button_brand"
                            onclick="returnToMainSettingsConfirm();">Confirm</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-backdrop_open"></div>
        </span>

        <span id="modal-confimation" style="display:none;">
            <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open">
                <div class="slds-modal__container">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse"
                                title="Close" onclick="$jqz('#modal-confimation').hide();">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"
                                     xmlns:xlink="http://www.w3.org/1999/xlink" />
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <h2 id="modal-header" class="slds-text-heading_medium slds-hyphenate">Warning</h2>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" >
                        <p>
                            You are removing a field that is currently referenced in the Related JIRA section of the following object(s):
                        </p>
                        <br/>
                        <ul id="affectedObjects" style="list-style: inside;padding-left: 40px;"/>
                        <br/>
                        <p>
                            Please Confirm to remove it from these references or Cancel to return to the Jira Issue Fields mapping page.
                        </p>
                    </div>
                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral"
                                onclick="$jqz('#modal-confimation').hide();">Cancel</button>
                        <button id='continue' class="slds-button slds-button_brand">Confirm</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-backdrop_open"></div>
        </span>
    </div>
    <script>
    var fieldsReferences;
    var selectedFieldsMap;

    var salesforceFields;
    var salesforceTypes;
    var jiraFields;
    var jiraTypes;
    var jiraItems;
    var jiraOnDemand;
    var standarJiraSfFieldsMap = {};
    var standarSfFieldsMap = new Set();
    
    $jqz(function() {
        $jqz('.pageMessageContainer').removeClass('pageMessageContainer');

        loadStandarFieldsMap();
        $jqz("#loader").show();
        
        $jqz("#zDwCorrectMessage").hide();
        $jqz("#zUpErrorMessage").hide();
        $jqz("#zUpWarningMessage").hide();
        $jqz("#zDwWarningMessage").hide();
        $jqz("#zDwErrorMessage").hide();
        
        $jqz("#buttonSave").attr("disabled", "");
        $jqz("#buttonSave").addClass("btnDisabled");
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZIssueMappingSettings.getJiraFields}',
            function(result, event) {
                if (event.status) {
                    jiraFields = result.names;
                    jiraTypes = result.types;
                    jiraItems = result.items;
                    jiraOnDemand = result.onDemand;
                    fillJiraFields();                    
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.ZIssueMappingSettings.fillSelectOptions}',
                        function(result, event) {                
                            if (event.status) {
                                salesforceFields = result.sfnames;
                                salesforceTypes = result.sftypes;
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.ZIssueMappingSettings.getSelectedFieldsAndReferences}',
                                    function(result, event) {
                                        window.console.log('getSelectedFieldsAndReferences',result);
                                        if (event.status) {
                                            fieldsReferences = result.fieldPerConcept;
                                            selectedFieldsMap = {};
                                            result.selectedFields.forEach(function(item){
                                                selectedFieldsMap[item.jiraid]=true;
                                            });
                                            fillSelectedFields(result.selectedFields);
                                            $jqz("#buttonSave").removeAttr("disabled");
                                            $jqz("#buttonSave").removeClass("btnDisabled");

                                            $jqz("#main-panel").show();
                                        }
                                        $jqz("#loader").hide();
                                    }
                                );
                            }
                        }
                    );
                }
            }
        );

        needToSyncMessage({!needToSyncZIssue},true);
    });
    function needToSyncMessage(needToSync,upMessage){
        $jqz("#zUpWarningMessage").hide("fast", function(){});
        $jqz("#zDwWarningMessage").hide("fast", function(){});
        window.console.log('needs sync:' +needToSync);
        if(needToSync){            
            var jQueryFd = upMessage?'zUpWarningMessage':'zDwWarningMessage';
            window.console.log('render on:' +jQueryFd);
            $jqz("#"+jQueryFd).show("fast", function(){});
            $jqz("#"+jQueryFd+" span").html("Please perform <a href='/apex/zsfjira__ZSyncJiraSf'>Refresh JIRA Issue data in Salesforce"+
                                                                "</a> after you have finished adding fields in this section"+
                                                                "<br/>The newly added fields will not display in the corresponding object layout until they are added to the Related Jira section.");
        }
    }
    function removeField(idToClose) {
        $jqz('#affectedObjects').html('');
        var usedObjects = [];
        for(var sobject in fieldsReferences){
            for(var i=0;i<fieldsReferences[sobject].length;i++){
                if(fieldsReferences[sobject][i]==idToClose){
                    usedObjects.push(sobject);
                    $jqz('#affectedObjects').append('<li>'+ sobject +'</li>');
                    break;
                }
            }
        }
        if(usedObjects.length>0){
            $jqz("#continue").attr("onclick","confirmRemove('" + idToClose + "');");
            $jqz('#modal-confimation').show();
        }else{
            confirmRemove(idToClose)
        }
    }
    function confirmRemove(idToClose){
        $jqz('#modal-confimation').hide();
        var removeAge= false;
        if(idToClose=='created' || idToClose=='resolutiondate'){
            var lis = document.getElementById("jiraSelectedFields").getElementsByTagName("li");
            for(var i = 0; i < lis.length; i++){
                if(lis[i].id=='age'){
                    removeAge = true;
                    break;
                }
            }
        }
        var elementToRemove = '#'+idToClose;
        $jqz(elementToRemove).hide("fast", function(){
            $jqz(elementToRemove).remove();
        });
        if(removeAge){
            $jqz('#age').hide("fast", function(){
                $jqz('#age').remove();
            });
        }
    }
    function htmlDecode(value){
        return $jqz('<div/>').html(value).text();
    }
    function fillSelectedFields(selectedFields){
        $jqz("#jiraSelectedFields").append("<li style='cursor:default' id='key' class='ui-sortable-handle undrag'><table><tr><td type='check_input' width='40%'><div class='slds-form-element'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                           "<span class='slds-form-element__label'> Issue Key</span></label></div></div><td width='50%'></td><td></td></tr></table></li>");
        for(var i = 0; i < selectedFields.length; i++){
            var currentField = selectedFields[i];
            if(currentField.jiraid!='age'){
                var jiraIdTxt = currentField.jiraid+'';
                $jqz("#jiraSelectedFields").append("<li id='"+currentField.jiraid+"' class='ui-sortable-handle'><table><tr><td type='check_input' width='40%'> <div class='slds-form-element' style='display: inline-block;'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                                   "<span class='slds-form-element__label'>" + getLabel(currentField.issuefieldlabel,jiraIdTxt)+"</span></label></div></div><td width='50%'>"+buildSelect(currentField.jiraid,currentField.salesforcefieldname)+"</td><td style='padding-left: 5%;'>"+
                                                   "<span class='closeable' title='Remove this item' onclick=\"removeField('"+currentField.jiraid+"');\"><img src='/img/dismiss.gif'/></span></td></tr></table></li>");
                setSfStandardSelectControl(currentField.jiraid,true);
            }
            else{
                $jqz("#jiraSelectedFields").append("<li id='age' class='ui-sortable-handle'><table><tr><td type='check_input' width='40%'> <div class='slds-form-element' style='display: inline-block;'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                                   "<span class='slds-form-element__label'> Age </span></label></div></div><td width='50%'></td><td style='padding-left: 5%;'>"+
                                                   "<span class='closeable' title='Remove this item' onclick=\"removeField('age');\"><img src='/img/dismiss.gif'/></span></td></tr></table></li>");
            }
        }
        
    }
    function getLabel(issuefieldlabel,jiraIdTxt){
        if(jiraIdTxt in jiraFields){
            return htmlDecode(issuefieldlabel) + (jiraIdTxt.indexOf('customfield_')==0?' *':'');
        }
        else{
            return htmlDecode(issuefieldlabel) + "<img src='/img/msg_icons/warning16.png' title='Field is currently not accessible from JIRA, check field permissions and availability'/>";
        }              
    }
    function setSfStandardSelectControl(jiraId,setStandardValue){
        if(jiraId.indexOf('customfield_')!=0){
            sfSelection = document.getElementById("sf_"+jiraId);
            sfSelection.disabled = true;
            if(setStandardValue){
                sfSelection.value = standarJiraSfFieldsMap[jiraId];
            }
        }
    }
    function buildSelect(jiraId,salesforcefieldname){
        var allowedTypes = new Set();
        allowedTypes.add('STRING');
        allowedTypes.add('TEXTAREA');
        if(jiraTypes[jiraId]=='date'){
            allowedTypes.add('DATE');
        }
        else if(jiraTypes[jiraId]=='datetime'){
            allowedTypes.add('DATETIME');
        }
            else if(jiraTypes[jiraId]=='number'){
                allowedTypes.add('DOUBLE');            
            }
        
        var html = "<div class='slds-select_container'><select class='slds-select' id='sf_"+jiraId+"'>"
        if(jiraId.indexOf('customfield_')==0){
            for(var sfField in salesforceFields){
                if(!(sfField in standarSfFieldsMap) && ((salesforceTypes[sfField] in allowedTypes)||sfField=='')){
                    if(sfField!=salesforcefieldname){
                        html += "<option value='"+sfField+"'>"+salesforceFields[sfField]+"</option>";
                    }
                    else{
                        html += "<option value='"+sfField+"' selected>"+salesforceFields[sfField]+"</option>";
                    }
                }
            }
        }
        else{
            for(var sfField in salesforceFields){
                if(sfField!=salesforcefieldname){
                    html += "<option value='"+sfField+"'>"+salesforceFields[sfField]+"</option>";
                }
                else{
                    html += "<option value='"+sfField+"' selected>"+salesforceFields[sfField]+"</option>";
                }
            }
        }
        html += "<select/></div>";
        return html;
    }
    function fillJiraFields(){
        var sortedFields = {};
        var sIndex=0;
        for(var jiraFieldId in jiraFields){            
            sortedFields[sIndex] = jiraFieldId;
            sIndex++;
        }        
        var minIndex = 0;
        var auxJiraField="";
        var lstContentStandard = "<optgroup label='Standard Fields'>";
        var lstContentCustom   = "<optgroup label='Custom Fields'>";
        for(var i=0;i<sIndex;i++){
            minIndex = i;
            for(var j=i+1;j<sIndex;j++){
                if(jiraFields[sortedFields[j]]<jiraFields[sortedFields[minIndex]]){
                    minIndex = j;
                }
            }            
            if(minIndex!=i){
                auxJiraField = sortedFields[i];
                sortedFields[i] = sortedFields[minIndex];
                sortedFields[minIndex] = auxJiraField;
            }
            auxJiraField = sortedFields[i];
            if(auxJiraField.indexOf("customfield_")==0){
                lstContentCustom += "<option value='" +
                    auxJiraField + "'>" +
                    jiraFields[auxJiraField] + "</option>";
            }
            else{
                lstContentStandard += "<option value='" +
                    auxJiraField + "'>" +
                    jiraFields[auxJiraField] + "</option>";
            }
        }
        lstContentStandard += "</optgroup>";
        lstContentCustom   += "</optgroup>";
        
        $jqz("#lstJiraFields").append(lstContentStandard);
        $jqz("#lstJiraFields").append(lstContentCustom);             
    }
    function showErrorMessage(message) {
        $jqz("#zUpErrorMessage h2").html(message);
        $jqz("#zUpErrorMessage").show().delay(5000).fadeOut();
    }
    function add(){
        var selectJiraFields = document.getElementById("lstJiraFields");      
        var lis = document.getElementById("jiraSelectedFields").getElementsByTagName("li");
        var alreadySelected = false;
        var existsCreated = false;
        var existsResolved = false;
        for(var i = 0; i < lis.length; i++){
            if(lis[i].id==selectJiraFields.value){
                alreadySelected = true;
                break;
            }
            if(lis[i].id=='created'){
                existsCreated = true;
            }
            if(lis[i].id=='resolutiondate'){
                existsResolved = true;
            }
        }
        if(alreadySelected){
            showErrorMessage("Field "+(selectJiraFields.value=="age"?"Age":jiraFields[selectJiraFields.value])+" is already selected");
        }
        else{
            if(selectJiraFields.value!="age"){
                var jiraIdTxt = selectJiraFields.value+'';
                $jqz("#jiraSelectedFields").append("<li id='"+selectJiraFields.value+"' class='ui-sortable-handle'><table><tr><td type='check_input' width='40%'> <div class='slds-form-element' style='display: inline-block;'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                                   "<span class='slds-form-element__label'>"+jiraFields[selectJiraFields.value]+(jiraIdTxt.indexOf('customfield_')==0?' *':'')+"</span></label></div></div><td/><td width='50%'>"+buildSelect(selectJiraFields.value,'')+"</td><td style='padding-left: 5%;'>"+
                                                   "<span class='closeable' title='Remove this item' onclick=\"removeField('"+selectJiraFields.value+"');\"><img src='/img/dismiss.gif'/></span></td></tr></table></li>");
                setSfStandardSelectControl(selectJiraFields.value,true);
            }
            else{
                $jqz("#jiraSelectedFields").append("<li id='age' class='ui-sortable-handle'><table><tr><td type='check_input' width='40%'><div class='slds-form-element' style='display: inline-block;'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                                   "<span class='slds-form-element__label'> Age </span></label></div></div> <td/><td width='50%'>"+
                                                   "</td><td style='padding-left: 5%;'>"+
                                                   "<span class='closeable' title='Remove this item' onclick=\"removeField('age');\"><img src='/img/dismiss.gif'/></span></td></tr></table></li>");
                if(!existsCreated){
                    var idjira='created';
                    $jqz("#jiraSelectedFields").append("<li id='"+idjira+"' class='ui-sortable-handle'><table><tr><td type='check_input' width='40%'><div class='slds-form-element' style='display: inline-block;'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                                       "<span class='slds-form-element__label'>"+ jiraFields[idjira] +"</span></label></div></div><td/><td width='50%'>"+buildSelect(idjira,'')+"</td><td style='padding-left: 5%;'>"+
                                                       "<span class='closeable' title='Remove this item' onclick=\"removeField('"+idjira+"');\"><img src='/img/dismiss.gif'/></span></td></tr></table></li>");
                    setSfStandardSelectControl(idjira,true);
                }
                if(!existsResolved){
                    var idjira='resolutiondate';
                    $jqz("#jiraSelectedFields").append("<li id='"+idjira+"' class='ui-sortable-handle'><table><tr><td type='check_input' width='40%'><div class='slds-form-element' style='display: inline-block;'><div class='slds-form-element__control'><label class='slds-checkbox'>"+
                                                       "<span class='slds-form-element__label'>"+jiraFields[idjira]+"</span></label></div></div><td/><td width='50%'>"+buildSelect(idjira,'')+"</td><td style='padding-left: 5%;'>"+
                                                       "<span class='closeable' title='Remove this item' onclick=\"removeField('"+idjira+"');\"><img src='/img/dismiss.gif'/></span></td></tr></table></li>");
                    setSfStandardSelectControl(idjira,true);
                }
            }
        }
    }

    var userSelectedValuesJSON = '';
    function save(){
        var newSelectedFieldsMap={}

        $jqz("#zDwWarningMessage").hide();
        $jqz("#zDwCorrectMessage").hide();
        $jqz("#zUpErrorMessage").hide();
        $jqz("#zDwErrorMessage").hide();
        var userSelectedValues = {};
        var sfSelection = '';
        var chkDisplay;
        var lis = document.getElementById("jiraSelectedFields").getElementsByTagName("li");
        var existsAge = false; 
        var ageIndex = 0;
        for(var i = 1; i < lis.length; i++){
            if(lis[i].id=='key'){
                continue;
            }
            newSelectedFieldsMap[lis[i].id]=true;

            if(lis[i].id!='age'){
                if(!(lis[i].id in jiraFields)){
                    $jqz("#zDwErrorMessage h2").html(
                        "Can't Save. Field "+lis[i].id+" is currently not accessible from JIRA,"+
                        " check field permissions and availability");
                    $jqz("#zDwErrorMessage").show();
                    return;
                }
                sfSelection = document.getElementById("sf_"+lis[i].id).value;
                chkDisplay = true;
                userSelectedValues[lis[i].id] = {
                    salesforceField:sfSelection,
                    jiraLabel:jiraFields[lis[i].id],
                    checkDisplay:chkDisplay,
                    jiraType:jiraTypes[lis[i].id],
                    jiraItem:jiraItems[lis[i].id],
                    salesforceType:salesforceTypes[sfSelection],
                    index:i
                };
            }
            else if(lis[i].id=='age'){
                ageIndex = i;
                existsAge = true;
            }
        }
        for(var jiraId_i in userSelectedValues){
            if(userSelectedValues[jiraId_i].salesforceField==''){
                $jqz("#zDwErrorMessage h2").html("Can't Save. Please Select salesforce field for '"+jiraFields[jiraId_i] + "' or remove field");
                $jqz("#zDwErrorMessage").show();
                return;
            }
            for(var jiraId_j in userSelectedValues){
                if(jiraId_i!=jiraId_j){
                    if(userSelectedValues[jiraId_i].salesforceField==userSelectedValues[jiraId_j].salesforceField){
                        $jqz("#zDwErrorMessage h2").html("Can't Save. Salesforce field '"+
                                                                               salesforceFields[userSelectedValues[jiraId_i].salesforceField]+
                                                                               "' for JIRA field '"+jiraFields[jiraId_i]+
                                                                               "' is already in use in JIRA field '" + 
                                                                               jiraFields[jiraId_j]+"'");
                        $jqz("#zDwErrorMessage").show();
                        return;
                    }
                }
            }
        }
        if(existsAge){
            userSelectedValues['age'] = {
                salesforceField:'N/A',
                jiraLabel:'Age',
                checkDisplay:true,
                jiraType:'N/A',
                jiraItem:'N/A',
                salesforceType:'N/A',
                index:ageIndex
            };
        }userSelectedValuesJSON = JSON.stringify(userSelectedValues);

        $jqz("#zDwCorrectMessage").show();
        $jqz("#zDwCorrectMessage h2").html("Saving...");

        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ZIssueMappingSettings.save}',
            userSelectedValuesJSON,
            function(result, event) {
                if (event.status) {
                    if (result.type == "error") {
                        $jqz("#zDwCorrectMessage").hide();
                        $jqz("#zDwErrorMessage h2").html(result.message);
                        $jqz("#zDwErrorMessage").show();
                    } else {
                        selectedFieldsMap = newSelectedFieldsMap;
                        $jqz("#zDwCorrectMessage").show().delay(5000).fadeOut();
                        $jqz("#zDwCorrectMessage h2").html("Saved successfully.");
                        funcRefreshNeedToSync();
                    }
                }
                else{
                    $jqz("#zDwCorrectMessage").hide();
                    $jqz("#zDwErrorMessage h2").html("Problems during saving, internal server error, "+ event.message);
                    $jqz("#zDwErrorMessage").show();
                    window.console.log('userSelectedValuesJSON->'+userSelectedValuesJSON);
                }
            },
            {escape: false}
        );

    }
    function loadStandarFieldsMap(){
        standarJiraSfFieldsMap['summary'] = 'Summary__c';
        standarJiraSfFieldsMap['issuetype'] = 'IssueType__c';
        standarJiraSfFieldsMap['timespent'] = 'TimeSpent__c';
        standarJiraSfFieldsMap['reporter'] = 'Reporter__c';
        standarJiraSfFieldsMap['created'] = 'Created__c';
        standarJiraSfFieldsMap['updated'] = 'Updated__c';
        standarJiraSfFieldsMap['description'] = 'Description__c';
        standarJiraSfFieldsMap['priority'] = 'Prioriy__c';
        standarJiraSfFieldsMap['status'] = 'Status__c';
        standarJiraSfFieldsMap['labels'] = 'Labels__c';
        standarJiraSfFieldsMap['workratio'] = 'WorkRatio__c';
        standarJiraSfFieldsMap['project'] = 'Project__c';
        standarJiraSfFieldsMap['environment'] = 'Environment__c';
        standarJiraSfFieldsMap['components'] = 'Components__c';
        standarJiraSfFieldsMap['timeoriginalestimate'] = 'OriginalEstimate__c';
        standarJiraSfFieldsMap['votes'] = 'Votes__c';
        standarJiraSfFieldsMap['resolution'] = 'Resolution__c';
        standarJiraSfFieldsMap['fixVersions'] = 'FixVersions__c';
        standarJiraSfFieldsMap['resolutiondate'] = 'Resolved__c';
        standarJiraSfFieldsMap['creator'] = 'Creator__c';
        standarJiraSfFieldsMap['duedate'] = 'DueDate__c';
        standarJiraSfFieldsMap['watches'] = 'Watchers__c';
        standarJiraSfFieldsMap['assignee'] = 'Assignee__c';
        standarJiraSfFieldsMap['versions'] = 'AffectsVersions__c';
        standarJiraSfFieldsMap['timeestimate'] = 'RemainingEstimate__c';
        
        for(jiraFieldId in standarJiraSfFieldsMap){
            standarSfFieldsMap.add(standarJiraSfFieldsMap[jiraFieldId]);
        }
    }

    function returnToMainSettings(){
        var unsavedChanges = false;
        var lis = document.getElementById("jiraSelectedFields").getElementsByTagName("li");
        var userFields = {};
        for(var i = 1; i < lis.length; i++){
            var jiraId=lis[i].id;
            if(jiraId=='key'){
                continue;
            }
            userFields[jiraId]=true;
            if(!(jiraId in selectedFieldsMap)){
                //A new Item was added
                unsavedChanges = true;
                break;
            }
        }
        if(!unsavedChanges){
            for(var jiraId in selectedFieldsMap){
                if(!(jiraId in userFields)){
                    //An old Item was removed
                    unsavedChanges = true;
                    break;
                }
            }
        }

        if(unsavedChanges){
            $jqz('#modal-unsaved-changes').show();
        }else{
            returnToMainSettingsConfirm();
        }
    }
    function returnToMainSettingsConfirm(){
        var settingsPage ='/apex/zsfjira__zAgile_Settings';
        if (typeof sforce != 'undefined' && sforce && sforce.one) {
            sforce.one.back();
        }else{
            window.location.replace(settingsPage);
        }
    }
    </script>
    </html>
</apex:page>