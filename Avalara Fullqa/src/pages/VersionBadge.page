<apex:page showHeader="false" sidebar="false" standardController="Version__c" extensions="VersionBadgeCtrl">
    <apex:slds ></apex:slds>
    <style>
        .slds-scope .slds-table--bordered, .slds-scope .slds-table_bordered{
            border-top: none;
        }
        .slds-scope .slds-table td, .slds-scope .slds-table th{
            padding: .1rem;
        }
        .requirement{
            max-width: 250px;
            width: 250px;
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/2.1.3/ui-bootstrap-tpls.min.js"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.13/moment-timezone-with-data.min.js"/>

    <script type="text/javascript">
        var app = angular.module('app', ['ui.bootstrap']);
        app.constant('sfVariables',{
            resource_path : '{!$Resource.CertificationBadges}'
        });
        app.controller('ctrl', ctrlFn);
        app.filter('dateAdjust', [function() {
            return function(input) {
                return input ? moment.utc(input).format('MM/DD/YYYY') : input;
            }
        }]);
        app.controller('configModalCtrl',configModalCtrlFn);

        function ctrlFn($scope, $q, sfVariables,$uibModal) {

            $scope.ui = {
                badgeSettings : {}
            };
            const SIZE = 6;

            function getRequirements(type) {
                var deferred = $q.defer();

                VersionBadgeCtrl.getRequirements('{!Version__c.Id}',type,function (result, event) {
                    deferred.resolve(result);
                },{escape: false});
                return deferred.promise;
            }

            function getBadges() {
                var deferred = $q.defer();

                VersionBadgeCtrl.getBadges('{!Version__c.Id}',function (result, event) {
                    deferred.resolve(result);
                },{escape: false});
                return deferred.promise;
            }
            function getSettings() {
                var deferred = $q.defer();

                VersionBadgeCtrl.getSettings(function (result, event) {
                    deferred.resolve(result);
                },{escape: false});
                return deferred.promise;
            }
            function buildSettings(arr) {
                var m = {};
                for (var i = 0; i < arr.length; i++) {
                    m[arr[i].Type__c + '||' + arr[i].Status__c] = sfVariables.resource_path + arr[i].Badge_Resource_Path__c;
                }
                return m;
            }

            function split(arr) {
                var size = SIZE;
                var r = [];
                for (var i = 0; i< arr.length; i += size) {
                    r.push(arr.slice(i, i + size));
                }
                return r;
            }

            function parseBadges(settings, badges) {
                for (var i = 0; i < badges.length; i++) {
                    badges[i].src = settings[badges[i].Type__c + '||' + badges[i].Status__c];
                }
                return badges;
            }

            $scope.openModal = function(badge) {
                var modalInstance = $uibModal.open({
                    templateUrl: 'configModal.html',
                    controller: 'configModalCtrl',
                    size: 'md',
                    resolve: {
                        configs: function () {
                            return getConfig(badge.Type__c);
                        },
                        badge : function () {
                            return badge;
                        }
                    }
                })
            }

            function getConfig(type) {
                var data = {};
                return getRequirements(type).then(function (res) {
                    for (var i = 0; i < res.length; i++) {
                        var c = res[i].Functional_Matrix_Requirements_Config__r;
                        data[c.Section__c] = data[c.Section__c] || {};
                        data[c.Section__c][c.SubHeader__c] = data[c.Section__c][c.SubHeader__c] || [];
                        data[c.Section__c][c.SubHeader__c].push(res[i]);
                    }
                    return data;
                })
            }
            $q.all([
                getSettings(),
                getBadges()
            ]).then(function (r) {
                $scope.ui.badges = split(parseBadges(buildSettings(r[0]), r[1]));
                $scope.ui.size = SIZE;
            });

        }
        function configModalCtrlFn($scope,$uibModalInstance,configs,badge) {
            $scope.dateAchieved = badge.Status__c == 'Certified' && badge.Date_Achieved__c ? badge.Date_Achieved__c : undefined;
            $scope.configs = configs;
            $scope.type = badge.Type__c;

            $scope.cancel = function () {
                $uibModalInstance.close();
            };
        }
    </script>
    <style>
        .slds-scope .slds-badge{
            border-radius: 0px;
        }
        .slds-scope hr{
            margin: 0.2rem 0;
        }
        .slds-scope .slds-modal__content{
            padding-top: 25px;
        }
        .section-span{
            position: absolute;
            top: -20px;
        }
        .slds-scope .slds-modal__content .slds-box{
            border-radius:0px;
        }
    </style>
    <div ng-app="app" ng-controller="ctrl" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" ng-cloak="true">
        <div class="slds-page-header slds-m-bottom_x-small">
          <div class="slds-media">
            <div class="slds-media__figure">
                <span class="slds-icon_container slds-icon-standard-opportunity">
                    <svg class="slds-icon" aria-hidden="true">
                        <use xlink:href="{!$Asset.SLDS}/assets/icons/standard-sprite/svg/symbols.svg#opportunity"></use>
                    </svg>
                </span>
            </div>
            <div class="slds-media__body">
                <h1 class="slds-page-header__title slds-truncate slds-align-middle">{!Version__c.Connector__r.Name}</h1>
                <p class="slds-text-body_small slds-line-height_reset">{!Version__c.Name}</p>
            </div>
          </div>
        </div>

        <div class="slds-p-around_large">
            <div class="slds-grid slds-grid_pull-padded-medium slds-m-bottom_x-small" ng-repeat="bs in ui.badges">
                <div class="slds-p-horizontal_medium slds-size_1-of-{{ui.size}} slds-box " ng-repeat="b in bs" style="cursor:pointer;">
                    <img ng-src="{{b.src}}" ng-click="openModal(b)"/>
                    <!--<span class="slds-badge slds-align_absolute-center">{{b.Type__c}} - {{b.Status__c}}</span>-->
                    <div class="slds-badge slds-align_absolute-center">{{b.Date_Achieved__c | dateAdjust}}</div>
                </div>
            </div>
        </div>

        <script type="text/ng-template" id="configModal.html">
            <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                <div class="slds-modal__container">
                    <header class="slds-modal__header">
                        <h5 class="modal-title">
                            <span class="glyphicon glyphicon-cog"></span>
                            {{type}} Requirements
                        </h5>
                        <div style="text-align:center;"><label> Date Achieved : {{dateAchieved | dateAdjust}}</label></div>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium">
                        <div ng-repeat="(k,v) in configs" style="position:relative;margin-bottom:25px;">
                            <span class="slds-badge slds-badge_inverse section-span">{{k}}</span>
                            <div  class="slds-box">
                                <table ng-repeat="(sk,sv) in v" style="margin-bottom:15px;" class="slds-table slds-table_bordered slds-table_cell-buffer slds-no-row-hover">
                                    <thead>
                                        <tr ng-if="sk">
                                            <td colspan="3" style="padding-left: 0px;padding-bottom: 4px;">
                                                <span class="slds-badge slds-badge_inverse">{{sk}}</span>
                                            </td>
                                        </tr>
                                        <tr class="slds-text-title_caps">
                                            <th class="requirement">
                                                Name
                                            </th>
                                            <th ng-if="showNote">
                                                Notes
                                            </th>
                                            <th style="width:30px;">
                                                &nbsp;
                                            </th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        <tr ng-repeat="r in sv">
                                            <td style="white-space:unset;">
                                                {{r.Functional_Requirement_Name__c}}
                                            </td>
                                            <td ng-if="showNote" style="white-space:unset;">
                                                {{r.Note__c}}
                                            </td>
                                            <td>
                                                <input type="checkbox" ng-checked="r.Date__c" ng-model="r.Date" ng-disabled="true" style="float:right;"/>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <footer class="slds-modal__footer">
                        <button type="button" ng-click="showNote = !showNote" class="slds-button slds-button_stateful slds-button_brand" style="float:left;">
                            {{showNote == true ? 'Hide Notes' : 'Show Notes'}}
                        </button>
                        <button type="button" ng-click="cancel()" class="slds-button slds-button_stateful slds-button_destructive">
                            Cancel
                        </button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-backdrop_open"></div>
        </script>
    </div>
</apex:page>