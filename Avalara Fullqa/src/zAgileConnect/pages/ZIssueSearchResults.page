<apex:page controller="zsfjira.ZIssueSearchController"
           lightningStylesheets="true" docType="html-5.0"
           title="Search Issues">
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__SLDS103, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jQuery, '/js/jquery-1.9.1.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__jquery_jqz_noconflict)}" />
    
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__zsettingsForm, 'scripts/vendor.js')}" /> 
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__zsettingsForm, 'scripts/app.js')}" />                 
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__zsettingsForm, 'styles/vendor.css')}"/> 
    <apex:stylesheet value="{!URLFOR($Resource.zsfjira__zsettingsForm, 'styles/app.css')}"/>

    <apex:includeScript value="/soap/ajax/42.0/connection.js"/>
    <apex:includeScript value="/support/console/42.0/integration.js"/>
    <apex:includeScript value="{!URLFOR($Resource.zsfjira__zAgileResources, '/js/zConnectNavigationHelper.js')}" />


    <apex:variable var="linkAllowed" value="{!IF(zPermissions.linkIssuesEnabled,true, $Permission.zsfjira__ZC_Link_Issues)}"/>
    <apex:variable var="isLightning"
                   value="{!IF($User.UIThemeDisplayed=='Theme4d'||$User.UIThemeDisplayed=='Theme4u',true,false)}"/>

    <apex:slds rendered="{!isLightning}"/>
    <style>
        input[type="checkbox"][disabled]::after {
           border-color: black!important;
           opacity: 0.5!important;
        }
    </style>
    <script>
    Visualforce.remoting.timeout = 120000;    
    if (!window.console) window.console = {};
    if (!window.console.log) window.console.log = function () {};

    function supports_html5_storage() {
        try {
            return 'sessionStorage' in window && window['sessionStorage'] !== null;
        } catch (e) {
            return false;
        }
    }

    zConnectNavigationHelper.setState(zConnectNavigationHelper.State.ISSUE_SEARCH_RESULT);

    function handleCancel(){
        return zConnectNavigationHelper.handleAction(
            zConnectNavigationHelper.ActionType.SELECT_CANCEL,
            {
                'cancelUrl' : '{!cancelUrl}'
            });
    }

    function handleOnIssuesLinkingEnded(fromRelatedList, caseId, errorMessages, finalMessage){
        function consoleCallback() {
            var message = {
                source : "linkCreateIssue",
                caseId : caseId,
                action : "renderIssueResults",
                msgError : errorMessages,
                msgSuccess :finalMessage
            };
            sforce.console.fireEvent(
                'messageFromComponent', JSON.stringify(message), function(result){}
            );
        }

        function noConsoleCallback(){
            if(supports_html5_storage()){
                var jsonResult = {
                    linkError : errorMessages,
                    linkSuccess : finalMessage
                };
                sessionStorage["LINK_RESULT_" + caseId] = JSON.stringify(jsonResult);
            }
        }

        return zConnectNavigationHelper.handleAction(
            zConnectNavigationHelper.ActionType.SELECT_SAVE,
            {
                'fromRelatedList': fromRelatedList,
                'cancelUrl' : '{!cancelUrl}',
                'msgError': errorMessages,
                'msgSuccess': finalMessage
            },
            zConnectNavigationHelper.createCallbacks(noConsoleCallback, consoleCallback,
                noConsoleCallback, consoleCallback)
        );
    }

    function goToEntity(tabUrl, tabName){
        return zConnectNavigationHelper.handleAction(
            zConnectNavigationHelper.ActionType.SELECT_LINK,
            {
                'tabUrl' : tabUrl,
                'tabName' : tabName
            });
    }
    </script>
    <div id="container" class="slds-p-left_medium slds-p-right_medium">
    <apex:sectionHeader title="Cases" subtitle="Search Issues for {!objName} {!mandatoryField}"
                        rendered="{!NOT(ISNULL(entityId))}"/>
    <apex:sectionHeader title="JIRA Search" subtitle="Find JIRA Issues"
                        rendered="{!ISNULL(entityId)}"/>
    <apex:pageBlock rendered="{!AND(NOT(ISNULL(entityId)),objName=='Case')}">
        <br />
        <table class="detailList" cellspacing="0" cellpadding="0" border="0">
            <tbody>
                <tr>
                    <td class="labelCol"> Case Owner </td>
                    <td class="dataCol" > 
                        <a href="/{!JSENCODE(currentCase.OwnerId)}" onClick='return goToEntity("/{!JSENCODE(currentCase.OwnerId)}", "{!JSENCODE(currentCase.Owner.Name)}")'>{!JSENCODE(currentCase.Owner.Name)} </a>
                    </td>
                    <td class="labelCol"> Contact Name </td>
                    <td class="dataCol" > 
                        <a href="/{!JSENCODE(currentCase.ContactId)}" onClick='return goToEntity("/{!JSENCODE(currentCase.ContactId)}", "{!JSENCODE(currentCase.Contact.Name)}")'>{!JSENCODE(currentCase.Contact.Name)}</a>
                    </td>
                </tr>
                
                <tr>
                    <td class="labelCol"> Status </td>
                    <td class="dataCol" > {!currentCase.Status} </td>
                    <td class="labelCol"> Email </td>
                    <td class="dataCol" > <a href="mailto:{!currentCase.Contact.Email}">{!currentCase.Contact.Email}</a> </td>
                </tr>
                
                <tr>
                    <td class="labelCol"> Case Number </td>
                    <td class="dataCol" > 
                        <a href="/{!JSENCODE(currentCase.Id)}" 
                           onClick='return goToEntity("/{!JSENCODE(currentCase.Id)}", "{!JSENCODE(currentCase.CaseNumber)}")'>{!JSENCODE(currentCase.CaseNumber)}</a>
                    </td>
                    <td class="labelCol"> Phone </td>
                    <td class="dataCol" > {!currentCase.Contact.Phone} </td>
                </tr>
                
                <tr>
                    <td class="labelCol"> Subject </td>
                    <td class="dataCol" colspan="3"> {!currentCase.Subject} </td>
                </tr>
            </tbody>
        </table>
    </apex:pageBlock>    
    <apex:pageBlock >        
        <div ng-controller="SearchCtrl as vm" ng-app="src">
            
            <div align="center" ng-show="vm.isShowing.basicSearch">
                <input ng-model="vm.txtSearch" type="text" style="width: 400px; " class="z-basic-search-input slds-input"
                       enter="vm.searchBasic()"/> &nbsp;&nbsp;
                <input type="button" class="btn z-basic-search-find-btn" value="Find Issues" ng-click="vm.searchBasic()"/> &nbsp;
                <a href="#" ng-click="vm.toogleSearch(true,$event)" class="z-adv-seach-toogle-lnk">
                    Advanced Search
                </a>                
            </div>
            
            <div align="center" ng-show="vm.isShowing.advancedSearch" class="ng-hide">
                JQL&nbsp;&nbsp;
                <input enter="vm.searchAdvanced()" ng-model="vm.jqlSearch" type="text" style="width: 500px; "  class="z-adv-search-input slds-input"/> &nbsp;&nbsp;
                <input type="button" class="btn z-adv-search-find-btn" value="Find Issues" ng-click="vm.searchAdvanced()"/>&nbsp;
                <a href="#" ng-click="vm.toogleSearch(false,$event)" >
                    Basic Search
                </a>
                <apex:outputPanel rendered="{!NOT(isLightning)}">
                    <a ng-href="#" ng-click="vm.helpDialog($event)" class="bs" style="display: inline;float: right;"
                       title="Help">
                        <span aria-hidden="true" class="glyphicon glyphicon-question-sign"
                              style="font-size: 15px;"></span>
                    </a>
                </apex:outputPanel>

                <apex:outputPanel rendered="{!isLightning}">
                    <button class="slds-button slds-button_icon slds-float--right slds-p-top_x-small"
                            ng-click="vm.helpDialog($event)"
                            title="Help">
                        <svg class="slds-button__icon" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#question')}"  xmlns:xlink="http://www.w3.org/1999/xlink" />
                        </svg>
                        <span class="slds-assistive-text">Help</span>
                    </button>
                </apex:outputPanel>
            </div>
            <br/>
            <div align="center" ng-show="vm.isShowing.loader" class="ng-hide">
                <apex:variable value="" rendered="{!NOT(isLightning)}" var="classicLoader">
                    <img src="{!$Resource.zsfjira__loader}"/>
                </apex:variable>

                <apex:variable value="" rendered="{!isLightning}" var="lexLoader">
                    <div id="slds-loader" class="slds-spinner_container slds-is-fixed" >
                        <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand" >
                            <span class="slds-assistive-text">Loading</span>
                            <div class="slds-spinner__dot-a"></div>
                            <div class="slds-spinner__dot-b"></div>
                        </div>
                    </div>
                </apex:variable>


            </div>            
            <table class="list ng-hide" ng-show="vm.isShowing.results" border="0" cellpadding="0" cellspacing="0">
                <colgroup span="5"></colgroup>
                <thead class="">
                    <tr class="headerRow">                        
                        <th class="headerRow" scope="col" colspan="1" ng-show="{!AND(linkAllowed,NOT(ISNULL(entityId)))}">                            
                            <div>
                                <input type="checkbox" ng-model="vm.selectAll"
                                       ng-click="vm.toogleSelection()"/>
                            </div>
                        </th>                        
                        <th class="headerRow" scope="col" colspan="1">
                            <div>Type</div>
                        </th>
                        <th class="headerRow" scope="col" colspan="1">
                            <div>Key</div>
                        </th>
                        <th class="headerRow" scope="col" colspan="1" >
                            <div>Summary</div>
                        </th>
                        <th class="headerRow" scope="col" colspan="1">
                            <div>Status</div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="issue in vm.lstIssuesResult track by $index"
                        class="dataRow even first" onmouseover="if (window.hiOn){hiOn(this);} " 
                        onmouseout="if (window.hiOff){hiOff(this);}" onblur="if (window.hiOff){hiOff(this);}" onfocus="if (window.hiOn){hiOn(this);}">                        
                        <td class="dataCell" colspan="1" width="5px" ng-show="{!AND(linkAllowed,NOT(ISNULL(entityId)))}">
                            <input ng-model="issue.linked" type="checkbox"
                                   ng-disabled="issue.originalLinked"
                                   ng-click="vm.checkOne($index)"/>
                        </td>
                        <td class="dataCell" colspan="1" width="10%">
                            {{issue.type.value}}
                        </td>
                        <td class="dataCell " colspan="1" width="10%">
                            <a type='popTrigger' key='{{issue.key}}' 
                               ng-href='{{issue.issueDetailsUrl}}'
                               ng-click='vm.navigateOrOpenSecondaryTabIfPossible(issue.issueDetailsUrl, issue.key,$event)'
                               target="_top">
                                {{issue.key}}
                            </a>
                        </td>
                        <td class="dataCell" colspan="1" width="50%">
                            <span ng-bind-html="issue.summary"></span>
                        </td>
                        <td class="dataCell" colspan="1" width="30%">
                            {{issue.status.value}}
                        </td>
                    </tr>
                </tbody>
            </table>
            <div ng-show="vm.isShowing.alert" class="message infoM4 ng-hide" role="alert">
                <img style="vertical-align: middle;" alt="INFO" class="msgIcon" src="/s.gif" title="INFO"/>
                <span ng-bind-html="vm.alert"></span>
            </div>
            <div ng-show="vm.isShowing.error" class="message errorM4 ng-hide" role="alert">
                <img style="vertical-align: middle;" alt="ERROR" class="msgIcon" src="/s.gif" title="ERROR"/>
                <span ng-repeat="error in vm.errors"><span ng-bind-html="error" class="z-search-msg"></span><br/></span>
            </div>
            <br/><br/>
            <div align="center">                            
                <apex:outputPanel rendered="{!AND(linkAllowed,NOT(ISNULL(entityId)))}">
                    <input ng-value="vm.linkButton" ng-disabled="vm.linkBDisabled" type="button"
                            ng-class="vm.linkBClass" class="btn z-link-issue-btn" ng-click="vm.linkIssues()" value="Link to {!objName}" />
                </apex:outputPanel>
                <apex:outputPanel rendered="{!NOT(ISNULL(entityId))}">
                    <input class="btn" ng-click="vm.doCancelSearch()" type="button" value="Cancel"/>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!AND(ISNULL(entityId),NOT(ISNULL($CurrentPage.parameters.retURL)))}">
                    <input class="btn" ng-click="vm.doReturn()" type="button" value="Return"/>
                </apex:outputPanel>
            </div>
            <input type="hidden" value="{!currentCase.subject}" name="caseSubject"/>
            <input type="hidden" value="{!$CurrentPage.parameters.searchText}" name="pSearchText"/>
            <input type="hidden" value="{!$CurrentPage.parameters.suggest}" name="pSuggest"/>
            <input type="hidden" value="{!$CurrentPage.parameters.retURL}" name="retURL"/>
            <input type="hidden" value="{!$CurrentPage.parameters.fromRelatedList}" name="fromRelatedList"/>
        </div>        
    </apex:pageBlock>
    <apex:form >
        <apex:actionFunction action="{!cancelSearch}" name="funcCancelSearch"/>
    </apex:form>
    </div>

    <c:ZSettingsHelp />
    
    <script type="text/javascript">
    var srcApp =  angular.module("src");
    
    srcApp.constant("resourceRoot","{!URLFOR($Resource.SLDS103,'')}");    
    srcApp.controller("SearchCtrl",SearchCtrl);    

    srcApp.directive('enter', function () {
        return function (scope, element, attrs) {
            element.bind("keydown keypress", function (event) {
                if(event.which === 13) {
                    scope.$apply(function (){
                        scope.$eval(attrs.enter);
                    });
                    event.preventDefault();
                }
            });
        };
    });
    srcApp.directive('input', function($compile){        
        return {
            link:function(scope, iElement, iAttrs) {
            	if (iElement.attr('type') === 'text') {
            		iAttrs.$set('ngTrim', "false");
        		}
        	}
        };
	});
    
    SearchCtrl.$inject = ["dataService","$filter","$timeout","$window","$scope"];
    
    function SearchCtrl(dataService,$filter,$timeout,$window,$scope) {
        var vm = this;
        vm.isShowing = {};
        vm.isShowing.basicSearch = true;
        vm.isShowing.alert = false;
        vm.isShowing.error = false;        
        
        vm.param = {};
        vm.selectAll = false;
        vm.lstIssuesResult=[];
        vm.linkButton = 'Link to {!JSENCODE(objName)}';
        var psuggest = $jqz('input[name=pSuggest]').val();            
        vm.param.suggest = (psuggest=='true');
        
        var pfromRelatedList = $jqz('input[name=fromRelatedList]').val();            
        vm.param.fromRelatedList = (pfromRelatedList=='true');
        
        if(vm.param.suggest){
            vm.param.searchText = $jqz('input[name=caseSubject]').val();
        }else{
            vm.param.searchText = $jqz('input[name=pSearchText]').val();
        }
        vm.param.retURL = $jqz('input[name=retURL]').val().trim();
        vm.caseId = '{!entityId}';
        
        vm.decodeHTML = htmlDecode;
        
        vm.toogleSearch = function(basic,$event){
            $event.preventDefault();

            if(basic){
                vm.isShowing.basicSearch=false;
                vm.isShowing.advancedSearch=true;
            }else{
                vm.isShowing.basicSearch=true;
                vm.isShowing.advancedSearch=false;
            }
        };
        vm.navigateOrOpenSecondaryTabIfPossible=function(url,name,$event){
            if(!goToEntity(url,name)){
                $event.preventDefault();
            }
        };
        vm.doCancelSearch=function(){
            handleCancel();
        };
        vm.doReturn = function(){
            $window.location.replace(vm.param.retURL);
        };
        vm.searchBasic=function(){
            searchIssues(vm.txtSearch,false,false);
        };
        vm.searchAdvanced=function(){
            searchIssues(vm.jqlSearch,false,true);
        };
        vm.showMessagesOrClose=function(finalMessage,lstErrorMessages){
            if(finalMessage!=''){
                vm.isShowing.alert = true;
                vm.alert=finalMessage;
            }
            if(lstErrorMessages.length!=0){
                vm.isShowing.error = true;
                vm.errors=lstErrorMessages;
            }
        };
        vm.linkIssues=function(){
            vm.isShowing.error = false;
            vm.isShowing.alert = false;
            
            var lstSelectedIssues =[];
            vm.lstIssuesResult.forEach(function(issue){
                if(!issue.originalLinked && issue.linked){
                    lstSelectedIssues.push(issue.key);
                }
            });
            if(lstSelectedIssues.length==0){
                vm.errors =["Select at least one issue to link."];
                vm.isShowing.error = true;
                return;
            }            
            vm.linkButton='Linking...';
            vm.linkBDisabled = true;
            vm.linkBClass = 'btnDisabled';
            return dataService.linkIssues(lstSelectedIssues,vm.caseId).then(function(data){
                var finalMessage = '';
                if(data.linkedIssues!=null && data.linkedIssues.length>0){
                    finalMessage = 'Issue(s) linked successfully: ' + data.linkedIssues;
                }
                var errorMessages = '';
                var lstErrorMessages = [];
                for(var i = 0;i<data.messages.length;i++){            
                    if(data.messages[i].indexOf('E|')==0||data.messages[i].indexOf('W|')==0) {
                        var errorM = data.messages[i].substring(2);
                        errorMessages += errorM+'<br/>';
                        lstErrorMessages.push(errorM);
                    }
                }
                if(vm.param.fromRelatedList){
                    vm.showMessagesOrClose(finalMessage,lstErrorMessages);
                }
                handleOnIssuesLinkingEnded(vm.param.fromRelatedList, vm.caseId, errorMessages, finalMessage);
            }).catch(function(data){
                vm.errors =[data.message];
                vm.isShowing.error = true;
            }).finally(function(){
                vm.isShowing.loader = false;
                
                vm.linkButton='Link to {!JSENCODE(objName)}';
                vm.linkBDisabled = false;
                vm.linkBClass = 'btn';
            });                                    
        };
        vm.toogleSelection=function(){
            vm.lstIssuesResult.forEach(function(issue,index){
                if(!issue.originalLinked){
                    vm.lstIssuesResult[index].linked=vm.selectAll;
                }
            });
        };
        vm.checkOne= function(index){
            if(!vm.lstIssuesResult[index].linked){
                vm.selectAll=false;
            }
        };
        vm.helpDialog = function($event){
            $event.preventDefault();
            openHelpDialog(9);
        };
        activate();
        function activate() {
            if(!vm.param.suggest){
                vm.txtSearch=vm.param.searchText
            }
            return searchIssues(vm.param.searchText,vm.param.suggest,false);
        }        
        function searchIssues(txt,suggest,useJql) {
            vm.isShowing.alert = false;
            vm.isShowing.error = false;

            if(!txt){
                return;
            }
            if(txt.trim()==''){
                return;
            }
            vm.lstIssuesResult = [];
            vm.isShowing.loader = true;
            vm.isShowing.results = false;
            return dataService.searchIssues(vm.caseId,txt,suggest,useJql).then(function(data){
                if(data.success && data.lstIssues.length==0){
                    vm.alert ='No matching search results';
                    vm.isShowing.alert = true;
                    return;
                }
                if(!data.success){
                    vm.errors =data.errors;
                    vm.isShowing.error = true;
                    return;
                }
                data.lstIssues.forEach(function(issue) {
                    issue.originalLinked=issue.linked;
                });                
                vm.lstIssuesResult = data.lstIssues;
                vm.isShowing.results = true;                
            }).catch(function(data){
                vm.errors =[data.message];
                vm.isShowing.error = true;
            }).finally(function(){
                vm.isShowing.loader = false;
            });
        }
    }               
    srcApp.factory("dataService",dataService);
    dataService.$inject = ["$q"];
    function dataService($q) {
        var service = {
            linkIssues: function linkIssues(lstIssues,caseId) {
                 var deferred = $q.defer();                
                Visualforce.remoting.Manager.invokeAction(
                    "{!$RemoteAction.ZIssueSearchController.linkIssues}",lstIssues,caseId,
                    function(result,event) {
                        if(event.status) {
                            deferred.resolve(result);
                        } else {
                            deferred.reject(event);
                        }                
                    });
                return deferred.promise;
            },
            searchIssues: function searchIssues(caseId,txt,suggest,useJql) {
                var deferred = $q.defer();                
                Visualforce.remoting.Manager.invokeAction(
                    "{!$RemoteAction.ZIssueSearchController.searchIssues}",caseId,txt,suggest,useJql,
                    function(result,event) {
                        if(event.status) {
                            deferred.resolve(result);
                        } else {
                            deferred.reject(event);
                        }                
                    });
                return deferred.promise;            
            }                    
        };        
        return service;                
    }        
    </script>
    <script>
    function htmlDecode(value){
        ret = $jqz('<div/>').html(value).text();
        return ret;
    }
    </script>
</apex:page>