<aura:component >
    <!-- Required -->
    <aura:attribute name="name" type="string" required="true" description="Select field html name" default="" />
    <aura:attribute name="label" type="String" required="true" description="Text that describes the desired textarea input" default="" />

    <aura:attribute name="multiple" type="Boolean" required="true" description="Specifies whether it is a single or multi select list" default="false" />

    <aura:attribute name="placeholder" type="String" description="placeholder text that will be displayed on the input field when the component is initialized"/>
    <aura:attribute name="class" type="String" description="A CSS class that will be applied to the outer element. This style is in addition to base classes associated with the component"/>
    <aura:attribute name="value" type="String" description="semi-colon separated values that reflect the selected pills"/>

    <aura:attribute name="errorMessage" type="String" description="message to be displayed when the component is in an error state"/>

    <aura:attribute name="disabled" type="Boolean" description="Can be toggled to make the field disabled"/>
    <aura:attribute name="required" type="Boolean" description="displays an * indicating that the field is required"/>
    <aura:attribute name="error" type="Boolean" description="Specifies whether or not the text area is in an error state. This will trigger errorMessage"/>

    <!-- Methods -->
    <aura:method name="externalValueChange" action="{!c.externalValueChange}" description="A method that can be called to change the value of the component from a source other than the strike_multiSelectPicklist component">
        <aura:attribute name="externalValue" type="String" description="value that is to be added to the value of the strike_multiSelectPicklist Component"/>
    </aura:method>
    <!-- Internal -->
    <aura:attribute name="idNumber" type="Integer" access="private" description="Random id assigned to pair labels with inputs"/>
    <aura:attribute name="focusIndex" type="Integer" access="private" description="Index to determine focus location when keyboard is used"/>
    <aura:attribute name="menuIsOpen" type="Boolean" access="private" description="toggles the slds-is-open class for the lookup menu"/>
    <aura:attribute name="selectedOptionPills" type="Object[]" access="private" description="pills to be populated when an option is selected from the dropdown"/>
    <aura:attribute name="validChildCmps" type="Object[]" access="private" description="stores valid child components to utilize when an iterator is used"/>
    <aura:attribute name="alreadyRendered" type="Boolean" access="private" description="is set to true after the initial render"/>
    <aura:attribute name="allChildrenFiltered" type="Boolean" description="is set to true if none of the strikeOption components are displayed" default="{!false}"/>
    <aura:attribute name="noResultsMessage" type="String" default="No results found for {0}" description="String value that will appear when the component finds 0 results"/>
    <aura:attribute name="searchTerm" type="String" description="String value of the user's entered search term"/>

    <!-- Event registration and handlers -->
    <aura:registerEvent name="onchange" type="JCFS:SelectListEvent"/>
    <aura:handler name="init" value="{!this}" action="{!c.onInit}"/>
    <aura:handler event="aura:doneRendering" action="{!c.handleDoneRendering}"/>
    <aura:handler name="strike_evt_notifyParent" event="JCFS:SelectListEvent" action="{!c.handleNotifyParent}" includeFacets="true" description="handles when a StrikeOption is clicked"/>
    <aura:handler name="strike_evt_componentDestroyed" event="JCFS:SelectListEvent" action="{!c.handleComponentDestroyed}" includeFacets="true" description="handles when a StrikeOption is clicked"/>

    <!-- Strike MultiSelect -->
    <div aura:id="multiSelectMenu" class="{!'slds-form-element slds-lookup ' + if(v.menuIsOpen, 'slds-is-open ', '') + v.class}" data-select="single">
        <label class="slds-form-element__label" for="{!'strike-multi-select-' + v.idNumber}">
            <aura:if isTrue="{!v.required}">
                <abbr class="slds-required" title="required">*</abbr>
            </aura:if>
                {!v.label}
        </label>

        <div class="{!'slds-form-element__control' + if(v.error, ' slds-has-error', '')}">
            <div class="slds-input-has-icon slds-input-has-icon--right">
                <lightning:icon iconName="utility:search" class="slds-input__icon" size="x-small"/>
                <input
                        aura:id="inputField"
                        id="{!'strike-multi-select-' + v.idNumber}"
                        type="text"
                        class="slds-lookup__search-input slds-input"
                        placeholder="{!empty(v.selectedOptionPills) ? v.placeholder : ''}"
                        role="combobox"
                        aria-expanded="false"
                        aria-autocomplete="list"
                        onfocus="{!c.handleOnfocus}"
                        onclick="{!c.handleOnclick}"
                        onblur="{!c.handleOnblur}"
                        onkeyup="{!c.handleOnkeyup}"
                        disabled="{!v.disabled}"
                />
            </div>
            <aura:if isTrue="{!and(v.error, not(empty(v.errorMessage)))}">
                <div class="slds-form-element__help">{!v.errorMessage}</div>
            </aura:if>
        </div>

        <ui:scrollerWrapper class="slds-lookup__menu" aura:id="scrollerWrapper">
            <ul class="slds-dropdown__list slds-dropdown--length-5" role="listbox">
                <aura:if isTrue="{!v.allChildrenFiltered}">
                    <li role="presentation">
                        <span class="slds-lookup__item-action slds-media sl-no-results" role="option">
                            <div class="slds-media__body">
                                <div class="slds-lookup__result-text">
                                        {!format(v.noResultsMessage, '"' + v.searchTerm + '"')}
                                </div>
                            </div>
                        </span>
                    </li>
                </aura:if>
                    {!v.body}
            </ul>
        </ui:scrollerWrapper>

        <aura:if isTrue="{!not(empty(v.selectedOptionPills))}">
            <div aura:id="optionPillContainer" class="slds-pill_container slds-pill_container--bare slds-wrap">
                <aura:iteration items="{!v.selectedOptionPills}" var="pill">
                    <input name="{!v.name}" value="{!pill.value}" type="hidden" />
                    <span class="smsp-pill">
                        <JCFS:SelectListPill label="{!pill.label}" value="{!pill.value}" iconName="{!pill.iconName}" destroyable="{!pill.destroyable}" />
                    </span>
                </aura:iteration>
            </div>
        </aura:if>
    </div>
</aura:component>
<!--
Copyright 2017 Appiphony, LLC

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->