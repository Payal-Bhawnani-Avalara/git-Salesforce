<apex:page id="CreateRCS" title="{!if(mode=='View',$Label.pse__rate_card_set_title,if(mode=='Edit',$Label.pse__rate_card_set_edit_title,$Label.pse__rate_card_set_create_title))}" sidebar="false" 
standardController="pse__Rate_Card_Set__c" extensions="pse.CreateRateCardSetController" lightningStylesheets="true">

<c:selectAllCheckboxes functionName="selectAllRows" />
<style type="text/css"> 
    .waitingSearchDivOpacity {
        opacity: 0.60 !important;
    }
    #associateOverlayContainer.secondaryPalette { 
    	background-color: transparent !important;
   	}
    .yuiOverlayDiv {
	    top: 0;
	    bottom: 0;
	    position: fixed;
	    display: block;
	    z-index: auto;
	}
	#associateOverlayContainer .yui3-overlay {
		left: 13% !important;
	}
</style>

<apex:outputPanel rendered="{!$User.UIThemeDisplayed!='Theme3'}" layout="none">
	<style>
		.resultTable th:not(:first-of-type) { 
			border-left: 1px solid rgb(221, 219, 218) !important; 
		}
		.resultTable th {
			border-bottom: 1px solid rgb(221, 219, 218) !important;
		}
		.resultTable tbody tr:first-of-type td {
			border-top: none !important;
		}
		.pageTitleIcon {
		    border-radius: .25rem;
		    background-color: #df6184;
		    background-image: url("{!URLFOR($Asset.SLDS, 'assets/icons/custom/custom13.svg')}");
		    background-repeat: no-repeat;
		    background-position: center;
		    background-size: 2rem;
		    display: block !important;
	    }
	</style>
</apex:outputPanel>
 
<script src="{!$Resource.yui_combo}/yui-min.js" type="text/javascript"></script>
<script src="{!$Resource.yui_combo}/loader-min.js" type="text/javascript"></script>
<script src="{!$Resource.yui_combo}/combo.js" type="text/javascript"></script>
<script src="{!$Resource.jsComponents}" type="text/javascript"></script>
<apex:stylesheet value="{!URLFOR($Resource.pse__jsComponentsResources, 'componentStyles.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.pse__yui3_1, 'YUIcombo_3_3_0.css')}"/>

<script type="text/javascript" >

    function confirmDissociate(checkBoxIdPattern) {
        if(checkSelections(checkBoxIdPattern)) {
            actionToDissociate();
        }else{
            return false;
        }
    }
    
    function confirmAssociate(checkBoxIdPattern) {
        if(checkSelections(checkBoxIdPattern)){
            actionToAssociate();
        }else{
            return false;
        }
    }
    
    function checkSelections(checkBoxIdPattern) {
        var count = 0; 
        var inputElem = document.getElementsByTagName("input");
        for ( var i = 0; i < inputElem.length; i++) {
            if (inputElem[i].id.indexOf(checkBoxIdPattern) != -1) {
                if(inputElem[i].checked){
                  count++;
                  break;
                }
            }
        }
        
        if(count<1){
            alert('{!JSINHTMLENCODE($Label.Rate_Card_Set_No_Row_Selected_Msg)}');
            return false;
        }else{
            return true;
        }
    }
    
    function singleDissociate(id,name) {
        actionToSingleDissociate(id,name);
    }
    
    function singleAssociate(id,name) {
        actionToSingleAssociate(id,name);
    }
    
    function onRoleChange() {
        actionToRoleChange();
    }
    
    function confirmDelete() {
	    return confirm('{!JSINHTMLENCODE($Label.Rate_Card_Set_Delete_Confirm_Msg)}');
	}
        
</script>
<c:WaitComponent />
<apex:form id="CreateRCS_Form">
	<apex:actionStatus id="ajaxStatus" onstart="wait(true)" onstop="wait(false)" />
    <apex:actionFunction name="actionToAssociate" status="ajaxStatus" action="{!createRateCardSetJunctions}" rerender="AssociatedRCSection,DissociatedRCSection,MsgSection" oncomplete="javascript:_AssociatePopupHandler.hide();"/>
    <apex:actionFunction name="actionToDissociate" status="ajaxStatus" action="{!deleteRateCardSetJunctions}" rerender="AssociatedRCSection,DissociatedRCSection,MsgSection" />
    <apex:actionFunction name="actionToRoleChange" status="ajaxStatus" action="{!roleChange}" rerender="AssociatedRCSection,DissociatedRCSection,MsgSection" />
    <apex:actionFunction name="actionToSingleAssociate" status="ajaxStatus" action="{!createSingleRateCardSetJunctions}" rerender="AssociatedRCSection,DissociatedRCSection,MsgSection" oncomplete="javascript:_AssociatePopupHandler.hide();">
        <apex:param name="myParamId" value=""/>
        <apex:param name="myParamName" value=""/>
    </apex:actionFunction>
    <apex:actionFunction name="actionToSingleDissociate" status="ajaxStatus" action="{!deleteSingleRateCardSetJunctions}" rerender="AssociatedRCSection,DissociatedRCSection,MsgSection">
        <apex:param name="myParamId" value=""/>
        <apex:param name="myParamName" value=""/>
    </apex:actionFunction>
    
    <apex:sectionHeader title="{!if(mode=='View',$Label.pse__rate_card_set_title,if(mode=='Edit',$Label.pse__rate_card_set_edit_title,$Label.pse__rate_card_set_create_title))}" subtitle="{!rateCardSet.Name}" help="{!$Page.pse__CreateRateCardSetHelp}"/>
    <apex:pageMessages id="MsgSection" />
    <apex:pageBlock id="CreateRCS_PB" rendered="{!displayContent}" title="{!$Label.pse__rate_card_set_info_title}">
        <apex:pageBlockButtons >
            <apex:commandButton value="{!$Label.pse__rate_card_set_save_btn}" action="{!save}" rendered="{!(mode!='View')}"/>
            <apex:commandButton value="{!$Label.pse__rate_card_set_edit_btn}" action="{!edit}" rendered="{!(mode=='View')}" />
            <apex:commandButton value="{!$Label.pse__rate_card_set_delete_btn}" action="{!deleteRateCradSet}" rendered="{!(mode!='Create')}" onClick="return confirmDelete();" />
            <apex:commandButton value="{!$Label.pse__rate_card_set_cancel_btn}" action="{!cancel}" rendered="{!(mode!='View')}" immediate="true" />
        </apex:pageBlockButtons>
        
        <!-- Rate Card Set Details section -->
        <apex:pageBlockSection id="info_section_display"  columns="2" rendered="{!(mode=='View')}">
        	<apex:outputField value="{!rateCardSet.Name}"/>
        	<apex:outputField value="{!rateCardSet.CurrencyIsoCode}"/>  
        	
            <apex:repeat value="{!RateCardSetDisplayFields}" var="fName">
                <apex:outputField value="{!rateCardSet[fName]}" rendered="{!AND(NOT(fName.Label == $ObjectType.Rate_Card_Set__c.Fields.Name.Label),
                                     NOT(fName.Label == $ObjectType.Rate_Card_Set__c.Fields.CurrencyIsoCode.Label))}"/> 
            </apex:repeat>
        </apex:pageBlockSection>
         <apex:pageBlockSection id="info_section_edit" columns="2" rendered="{!(mode!='View')}">
         	<apex:inputField value="{!rateCardSet.Name}" required="true" />
         	<apex:inputField value="{!rateCardSet.CurrencyIsoCode}" required="true" />
            <apex:repeat value="{!RateCardSetDisplayFields}" var="fName">
                <apex:inputField value="{!rateCardSet[fName]}" rendered="{!AND(NOT(fName.Label == $ObjectType.Rate_Card_Set__c.Fields.Name.Label),
                                     NOT(fName.Label == $ObjectType.Rate_Card_Set__c.Fields.CurrencyIsoCode.Label))}" required="{!OR(fName.required,fName.DBRequired)}" />
            </apex:repeat>
        </apex:pageBlockSection>
        <apex:pageBlockSection id="info_section_gap" columns="2">
            <apex:outputPanel id="gap">
                <br/>       
            </apex:outputPanel>
        </apex:pageBlockSection>
        
        <!-- Associated Rate Card Set section -->
        <apex:pageBlock title="{!$Label.pse__rate_card_set_associated_title}" id="RC_Associated" rendered="{!(mode!='Create')}">
        <apex:pageBlockButtons location="top">
            <apex:commandButton value="{!$Label.pse__rate_card_set_display_associate_btn}"  onclick="javascript:_AssociatePopupHandler.show(this); return false;" />
            <apex:commandButton value="{!$Label.pse__rate_card_set_disassociate_btn}" onclick="confirmDissociate('matchingAssocitedRowSelector'); return false;"/>
        </apex:pageBlockButtons>
            <apex:pageBlockSection columns="1" id="AssociatedRCSection">
                <apex:outputPanel id="detail">
                    <apex:outputText id="recordCountLabel" value="{!$Label.pse__rate_card_set_associated_count} :  " />
                    <apex:outputText id="recordCount" value="{!associatedRateCards.size}" />
                </apex:outputPanel>
                <apex:pageBlockTable styleClass="resultTable" value="{!associatedRateCards}" var="rcWrapper" id="AssociatedRCList">
                    <apex:column > 
                        <apex:facet name="header">
                            <input type="checkbox"  onclick="selectAllRows(this, 'matchingAssocitedRowSelector')" />
                         </apex:facet>
                        <apex:inputcheckbox value="{!rcWrapper.isSelected}" id="matchingAssocitedRowSelector" />
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">{!$Label.pse__rate_card_set_action_column}</apex:facet>
                        <apex:outputLink value=""  onclick="singleDissociate('{!rcWrapper.ratecard.Id}','{!rcWrapper.ratecard.name}'); return false;">{!$Label.pse__rate_card_set_disassociate_btn}</apex:outputLink>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">{!$Label.pse__rate_card_set_rate_card_column}</apex:facet>
                        <apex:outputLink value="/{!rcWrapper.ratecard.Id}" target="_blank">{!rcWrapper.ratecard.Name}</apex:outputLink>
                    </apex:column>
                    <apex:column >
                            <apex:facet name="header">{!$Label.pse__rate_card_set_role_column}</apex:facet>
                            <apex:outputField value="{!rcWrapper.ratecard.pse__Role__c}" />
                    </apex:column>
                    <apex:repeat value="{!RateCardDisplayFields}" var="fName">
                    	<apex:column rendered="{!AND(NOT(fName.Label == $ObjectType.Rate_Card__c.Fields.Name.Label),
                                     NOT(fName.Label == $ObjectType.Rate_Card__c.Fields.Role__c.Label))}">
                    		<apex:facet name="header">{!fName.Label}</apex:facet>
                    		<apex:outputField value="{!rcWrapper.ratecard[fName]}"/>
                        </apex:column>
                    </apex:repeat>
                </apex:pageBlockTable>
            </apex:pageBlockSection>
         </apex:pageBlock>
         
        <!-- Rate Card Set Project Section -->
        <apex:pageBlock title="{!$Label.pse__rate_card_set_project_title}" id="RCS_Project" rendered="{!(mode!='Create')}">
            <apex:pageBlockSection columns="1" id="ProjectSection">
                <apex:pageBlockTable styleClass="resultTable" value="{!projects}" var="proj" id="ProjectList">
                    <apex:column >
                        <apex:facet name="header">{!$Label.pse__rate_card_set_project_column}</apex:facet>
                        <apex:outputLink value="/{!proj.Id}" target="_blank">{!proj.Name}</apex:outputLink>
                    </apex:column>
                    <apex:repeat value="{!ProjectDisplayFields}" var="fName">
                    	<apex:column rendered="{!(NOT(fName.Label == $ObjectType.pse__Proj__c.Fields.Name.Label))}">
                    		<apex:facet name="header">{!fName.Label}</apex:facet>
                    		<apex:outputField value="{!proj[fName]}"/>
                        </apex:column>
                    </apex:repeat>
                </apex:pageBlockTable>
            </apex:pageBlockSection>
         </apex:pageBlock>
         
         <!-- Rate Card Set Opportunity Section -->
        <apex:pageBlock title="{!$Label.pse__rate_card_set_opp_title}" id="RCS_Opportunity" rendered="{!(mode!='Create')}">
            <apex:pageBlockSection columns="1" id="OpportunitySection">
                <apex:pageBlockTable styleClass="resultTable" value="{!opportunities}" var="opp" id="OpportunityList">
                    <apex:column >
                        <apex:facet name="header">{!$Label.pse__rate_card_set_opp_column}</apex:facet>
                        <apex:outputLink value="/{!opp.Id}" target="_blank">{!opp.Name}</apex:outputLink>
                    </apex:column>
                    <apex:repeat value="{!OpportunityDisplayFields}" var="fName">
                    	<apex:column rendered="{!(NOT(fName.Label == $ObjectType.Opportunity.Fields.Name.Label))}">
                    		<apex:facet name="header">{!fName.Label}</apex:facet>
                    		<apex:outputField value="{!opp[fName]}"/>
                        </apex:column>
                    </apex:repeat>
                </apex:pageBlockTable>
            </apex:pageBlockSection>
         </apex:pageBlock>
     </apex:pageBlock>
     
     
    <!-- Dissociated Rate Card Set Overlay section -->
	<div id="associateOverlayContainer" class="overlayContainer" >
		<div class="overlayContainer yuiOverlayDiv"></div>
	    <div id="associateOverlay">
	        <div id="associateHeader" class="yui-widget-hd overlarCaptionBar" onclick="javascript:_AssociatePopupHandler.hide();"></div>
	        <div class="yui-widget-bd overlayBody">
	          <div id="associateOverlaySubContainer"  >
	               		 <!-- Dissociated Rate Card Set section -->
				           <apex:sectionHeader title="{!$Label.pse__rate_card_set_available_title}" help="{!$Page.pse__CreateRateCardSetHelp}" />
					       <apex:pageBlock id="RC_Dissociated" rendered="{!(mode!='Create')}">
					            <div id="ratecardsection1"  style="overflow: auto !important;">
					            <apex:pageBlockSection columns="1" id="DissociatedRCSection">
					                <apex:outputPanel >
					                    <apex:outputText id="RoleLabel" value="{!$Label.pse__rate_card_set_role_label} :  " />
					                    <apex:inputField value="{!mockRateCard.pse__Role__c}" onchange="onRoleChange();"/>
										<apex:commandButton value="{!$Label.pse__rate_card_set_associate_btn}" onclick="confirmAssociate('matchingDissociatedRowSelector');return false;"/>
					                </apex:outputPanel>
					                <apex:pageBlockTable styleClass="resultTable" value="{!DissociatedRateCards}" var="drcWrapper" id="DissociatedRCList" style=" overflow-y:auto;">
					                    <apex:column > 
					                        <apex:facet name="header">
					                            <input type="checkbox"  onclick="selectAllRows(this, 'matchingDissociatedRowSelector')" />
					                         </apex:facet>
					                        <apex:inputcheckbox value="{!drcWrapper.isSelected}" id="matchingDissociatedRowSelector" />
					                    </apex:column>
					                    <apex:column >
					                        <apex:facet name="header">{!$Label.pse__rate_card_set_action_column}</apex:facet>
					                        <apex:outputLink value="" onclick="singleAssociate('{!drcWrapper.ratecard.Id}','{!drcWrapper.ratecard.name}'); return false;">{!$Label.pse__rate_card_set_associate_btn}</apex:outputLink>
					                    </apex:column>
					                    <apex:column >
					                        <apex:facet name="header">{!$Label.pse__rate_card_set_rate_card_column}</apex:facet>
					                        <apex:outputLink value="/{!drcWrapper.ratecard.Id}" target="_blank">{!drcWrapper.ratecard.Name}</apex:outputLink>
					                    </apex:column>
					                    <apex:column >
					                            <apex:facet name="header">{!$Label.pse__rate_card_set_role_column}</apex:facet>
					                            <apex:outputField value="{!drcWrapper.ratecard.pse__Role__c}" />
					                    </apex:column>
				                    	<apex:repeat value="{!RateCardDisplayFields}" var="fName">
					                        <apex:column rendered="{!AND(NOT(fName.Label == $ObjectType.Rate_Card__c.Fields.Name.Label),
					                                     NOT(fName.Label == $ObjectType.Rate_Card__c.Fields.Role__c.Label))}">
					                            <apex:facet name="header">{!fName.Label}</apex:facet>
					                            <apex:outputField value="{!drcWrapper.ratecard[fName]}"/>
				                            </apex:column>
					                    </apex:repeat>
					                </apex:pageBlockTable>
					                
					            </apex:pageBlockSection>
					            </div>
					         </apex:pageBlock>
 				</div>
			</div>
	    </div>          
	</div> 

</apex:form>

<script type="text/javascript" >
var _yui;
var _AssociatePopupHandler = {
	overlay : null,
	overlayContainer : null, 
	overlayEscKeyHandle : null,
	prepare : function () {
	    /* Create Overlay from script, this time. With no footer */
	    _AssociatePopupHandler.overlay = new _yui.Overlay({
	        contentBox : "#associateOverlay", 
	        width : "60%",
	        zIndex:2
	    });
	    
	    /* Center overlay in viewport */
	    _AssociatePopupHandler.overlay.set("centered", true);
	    
	    _AssociatePopupHandler.overlay.render();
	    _AssociatePopupHandler.overlay.show();
	    _AssociatePopupHandler.overlayContainer = _yui.one('#associateOverlayContainer'); 
	},
	
    attachEscKey : function () 
    {
       _AssociatePopupHandler.overlayEscKeyHandle = _yui.on('key', _AssociatePopupHandler.hide, document, 'down:27', _yui);
    },
    
    detachEscKey : function ()
    {
       _AssociatePopupHandler.overlayEscKeyHandle.detach();
    },
    
    show : function () {
        validateZIndexForOverlay(true);
        _yui.one('#associateOverlay .overlayBody').setStyle('width','1000px');
        _yui.one('#associateHeader').setStyle('width','1030px');
    	_yui.one('#associateOverlay .overlayBody').setStyle('overflow', 'auto');
 	    _AssociatePopupHandler.overlayContainer.setStyle('display', 'block');
	    _AssociatePopupHandler.overlay.set("centered", true);
	    stablizeOverlay(_AssociatePopupHandler.overlay);
	    _AssociatePopupHandler.attachEscKey();
    },
    
    hide : function() {
	    _AssociatePopupHandler.overlayContainer.setStyle('display', 'none');
	    _AssociatePopupHandler.detachEscKey();
	    validateZIndexForOverlay(false);
    }
}


	YUI({fetchCSS : false}).use("node","event","event-key", "io",  "overlay", "anim", "node-event-simulate", function(Y) {
    /*Recent release of Chrome (V7) have broken the UI. 
      This is because YUI's NODE creation API is failing while creating some specific type of NODE. 
      The cause of broken functionality is the YUI code [Y.Node.create()] which creates THEAD/TR/TD. 
      In latest chrome release any call to Y.Node.create() which creates THEAD/TR/TD without TABLE tag fails.*/
    Y.mix(Y.DOM.creators, {
        tbody: function(html, doc) {
            return Y.DOM.create('<table>' + html + '</table>', doc);
        },
        thead: function(html, doc) {
            return Y.DOM.create('<table>' + html + '</table>', doc);
        },
        tr: function(html, doc) {
            return Y.DOM.create('<tbody>' + html + '</tbody>', doc);
        },
        td: function(html, doc) {
            return Y.DOM.create('<tr>' + html + '</tr>', doc);
        }, 
        th: function(html, doc) {
            return Y.DOM.create('<tr>' + html + '</tr>', doc);
        }
        
    });
    
    
    _yui = Y;
    _yui.on('domready',_AssociatePopupHandler.prepare,_yui);
	
	});  
</script>
</apex:page>